#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –Ω–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from modules.form_elements import FormElements
from modules.iframe_handler import IframeHandler
from modules.form_filler import FormFiller
from modules.excel_exporter import ExcelExporter
from modules.new_site_handler import NewSiteHandler


def test_form_elements():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å FormElements"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å FormElements...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
    period_selector = FormElements.get_element_selector('period_dropdown')
    print(f"   –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞: {period_selector}")
    
    start_date_selector = FormElements.get_element_selector('start_date_field')
    print(f"   –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: {start_date_selector}")
    
    end_date_selector = FormElements.get_element_selector('end_date_field')
    print(f"   –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {end_date_selector}")
    
    reason_selector = FormElements.get_element_selector('reason_field')
    print(f"   –ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è: {reason_selector}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π
    period_value = FormElements.get_period_value('–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π')
    print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ '–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π': {period_value}")
    
    start_date = FormElements.get_test_date('start_date')
    print(f"   –¢–µ—Å—Ç–æ–≤–∞—è –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: {start_date}")
    
    end_date = FormElements.get_test_date('end_date')
    print(f"   –¢–µ—Å—Ç–æ–≤–∞—è –¥–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {end_date}")
    
    print("‚úÖ FormElements —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n")


def test_new_site_handler():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å NewSiteHandler"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å NewSiteHandler...")
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    class MockDriver:
        def find_element(self, *args, **kwargs):
            return None
    
    class MockLogger:
        def info(self, msg):
            print(f"   INFO: {msg}")
        
        def error(self, msg):
            print(f"   ERROR: {msg}")
        
        def warning(self, msg):
            print(f"   WARNING: {msg}")
    
    mock_driver = MockDriver()
    mock_logger = MockLogger()
    
    try:
        handler = NewSiteHandler(mock_driver, mock_logger)
        print("   ‚úÖ NewSiteHandler —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–æ–¥–æ–≤
        methods = ['process_report', 'fill_report_parameters', 'submit_report_request', 'export_to_excel']
        for method in methods:
            if hasattr(handler, method):
                print(f"   ‚úÖ –ú–µ—Ç–æ–¥ {method} –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"   ‚ùå –ú–µ—Ç–æ–¥ {method} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ NewSiteHandler: {e}")
    
    print("‚úÖ NewSiteHandler —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥—É–ª–µ–π...\n")
    
    test_form_elements()
    test_new_site_handler()
    
    print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")


if __name__ == "__main__":
    main()
