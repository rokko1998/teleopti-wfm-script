// ========================================
// –ö–û–ú–ê–ù–î–´ –î–õ–Ø –í–´–ü–û–õ–ù–ï–ù–ò–Ø –í –ö–û–ù–°–û–õ–ò –ë–†–ê–£–ó–ï–†–ê
// ========================================

// 1. –ü–û–õ–£–ß–ò–¢–¨ –ü–û–õ–ù–£–Æ HTML –°–¢–†–£–ö–¢–£–†–£ –°–¢–†–ê–ù–ò–¶–´
// ========================================
console.log("=== –ü–û–õ–ù–ê–Ø HTML –°–¢–†–£–ö–¢–£–†–ê –°–¢–†–ê–ù–ò–¶–´ ===");
console.log(document.documentElement.outerHTML);

// 2. –ê–ù–ê–õ–ò–ó –≠–õ–ï–ú–ï–ù–¢–û–í REPORTVIEWER
// ========================================
console.log("=== –≠–õ–ï–ú–ï–ù–¢–´ REPORTVIEWER ===");
const reportElements = document.querySelectorAll('[id*="ReportViewer"], [class*="ReportViewer"]');
console.log(`–ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ ReportViewer: ${reportElements.length}`);
reportElements.forEach((el, i) => {
    console.log(`${i+1}. ID: ${el.id}, Class: ${el.className}, Tag: ${el.tagName}`);
});

// 3. –ê–ù–ê–õ–ò–ó IFRAME –° –û–¢–ß–ï–¢–û–ú
// ========================================
console.log("=== IFRAME –° –û–¢–ß–ï–¢–û–ú ===");
const iframes = document.querySelectorAll('iframe');
console.log(`–ù–∞–π–¥–µ–Ω–æ iframe: ${iframes.length}`);
iframes.forEach((iframe, i) => {
    console.log(`${i+1}. ID: ${iframe.id}, Class: ${iframe.className}, Src: ${iframe.src}`);
    
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É iframe
    try {
        if (iframe.contentDocument) {
            console.log(`   ‚úÖ –î–æ—Å—Ç—É–ø –∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É iframe #${i+1} –ø–æ–ª—É—á–µ–Ω`);
            console.log(`   üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${iframe.contentDocument.title}`);
            
            // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤–Ω—É—Ç—Ä–∏ iframe
            const iframeButtons = iframe.contentDocument.querySelectorAll('button, input[type="button"], input[type="submit"]');
            console.log(`   üîò –ö–Ω–æ–ø–∫–∏ –≤ iframe: ${iframeButtons.length}`);
            
            const iframeTables = iframe.contentDocument.querySelectorAll('table');
            console.log(`   üìä –¢–∞–±–ª–∏—Ü—ã –≤ iframe: ${iframeTables.length}`);
            
            const iframeInputs = iframe.contentDocument.querySelectorAll('input, select, textarea');
            console.log(`   üìù –ü–æ–ª—è –≤ iframe: ${iframeInputs.length}`);
            
        } else {
            console.log(`   ‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É iframe #${i+1} (CORS)`);
        }
    } catch (e) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ iframe #${i+1}: ${e.message}`);
    }
});

// 4. –ê–ù–ê–õ–ò–ó –¢–ê–ë–õ–ò–¶ –î–ê–ù–ù–´–•
// ========================================
console.log("=== –¢–ê–ë–õ–ò–¶–´ –î–ê–ù–ù–´–• ===");
const dataTables = document.querySelectorAll('table[class*="data"], table[id*="data"], table[class*="table"]');
console.log(`–ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü –¥–∞–Ω–Ω—ã—Ö: ${dataTables.length}`);
dataTables.forEach((table, i) => {
    console.log(`${i+1}. ID: ${table.id}, Class: ${table.className}`);
    console.log(`   –°—Ç—Ä–æ–∫: ${table.rows.length}, –ö–æ–ª–æ–Ω–æ–∫: ${table.rows[0]?.cells.length || 0}`);
});

// 4. –ê–ù–ê–õ–ò–ó –≠–õ–ï–ú–ï–ù–¢–û–í –ü–ê–ì–ò–ù–ê–¶–ò–ò (–ò–°–ü–†–ê–í–õ–ï–ù–û)
// ========================================
console.log("=== –≠–õ–ï–ú–ï–ù–¢–´ –ü–ê–ì–ò–ù–ê–¶–ò–ò ===");
const paginationElements = document.querySelectorAll('[class*="pagination"], [id*="pagination"]');
console.log(`–ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏: ${paginationElements.length}`);
paginationElements.forEach((el, i) => {
    console.log(`${i+1}. ID: ${el.id}, Class: ${el.className}, Text: ${el.textContent.trim()}`);
});

// –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å —Ç–µ–∫—Å—Ç–æ–º "–°—Ç—Ä–∞–Ω–∏—Ü–∞" –æ—Ç–¥–µ–ª—å–Ω–æ
const pageElements = Array.from(document.querySelectorAll('*')).filter(el => 
    el.textContent && el.textContent.includes('–°—Ç—Ä–∞–Ω–∏—Ü–∞')
);
console.log(`–ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–æ —Å–ª–æ–≤–æ–º "–°—Ç—Ä–∞–Ω–∏—Ü–∞": ${pageElements.length}`);
pageElements.forEach((el, i) => {
    console.log(`${i+1}. Tag: ${el.tagName}, Class: ${el.className}, Text: ${el.textContent.trim()}`);
});

// 5. –ê–ù–ê–õ–ò–ó –≠–õ–ï–ú–ï–ù–¢–û–í –≠–ö–°–ü–û–†–¢–ê
// ========================================
console.log("=== –≠–õ–ï–ú–ï–ù–¢–´ –≠–ö–°–ü–û–†–¢–ê ===");
const exportElements = document.querySelectorAll('[class*="export"], [id*="export"]');
console.log(`–ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç–∫—Å–ø–æ—Ä—Ç–∞: ${exportElements.length}`);
exportElements.forEach((el, i) => {
    console.log(`${i+1}. ID: ${el.id}, Class: ${el.className}, Text: ${el.textContent.trim()}`);
});

// –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å —Ç–µ–∫—Å—Ç–æ–º "–≠–∫—Å–ø–æ—Ä—Ç" –∏–ª–∏ "Excel" –æ—Ç–¥–µ–ª—å–Ω–æ
const excelElements = Array.from(document.querySelectorAll('*')).filter(el => 
    el.textContent && (el.textContent.includes('–≠–∫—Å–ø–æ—Ä—Ç') || el.textContent.includes('Excel'))
);
console.log(`–ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å "–≠–∫—Å–ø–æ—Ä—Ç" –∏–ª–∏ "Excel": ${excelElements.length}`);
excelElements.forEach((el, i) => {
    console.log(`${i+1}. Tag: ${el.tagName}, Class: ${el.className}, Text: ${el.textContent.trim()}`);
});

// 6. –ê–ù–ê–õ–ò–ó –°–ö–†–´–¢–´–• –ü–û–õ–ï–ô –° –î–ê–ù–ù–´–ú–ò
// ========================================
console.log("=== –°–ö–†–´–¢–´–ï –ü–û–õ–Ø –° –î–ê–ù–ù–´–ú–ò ===");
const hiddenDataFields = document.querySelectorAll('input[type="hidden"][value*="data"]');
console.log(`–ù–∞–π–¥–µ–Ω–æ —Å–∫—Ä—ã—Ç—ã—Ö –ø–æ–ª–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏: ${hiddenDataFields.length}`);
hiddenDataFields.forEach((field, i) => {
    console.log(`${i+1}. ID: ${field.id}, Name: ${field.name}, Value: ${field.value}`);
});

// 7. –ü–û–ò–°–ö –í–°–ï–• –ö–ù–û–ü–û–ö –ò –ò–• –¢–ï–ö–°–¢–ê
// ========================================
console.log("=== –í–°–ï –ö–ù–û–ü–ö–ò ===");
const allButtons = document.querySelectorAll('button, input[type="button"], input[type="submit"], a[role="button"]');
console.log(`–ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫: ${allButtons.length}`);
allButtons.forEach((btn, i) => {
    console.log(`${i+1}. ID: ${btn.id}, Class: ${btn.className}, Text: "${btn.textContent.trim()}", Tag: ${btn.tagName}`);
});

// 8. –ü–û–ò–°–ö –í–°–ï–• –ü–û–õ–ï–ô –í–í–û–î–ê
// ========================================
console.log("=== –í–°–ï –ü–û–õ–ò –í–í–û–î–ê ===");
const allInputs = document.querySelectorAll('input, select, textarea');
console.log(`–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞: ${allInputs.length}`);
allInputs.forEach((input, i) => {
    console.log(`${i+1}. ID: ${input.id}, Name: ${input.name}, Type: ${input.type}, Class: ${input.className}`);
});

// 9. –ê–ù–ê–õ–ò–ó URL IFRAME (–ö–õ–Æ–ß–ï–í–û–ï!)
// ========================================
console.log("=== URL IFRAME –° –û–¢–ß–ï–¢–û–ú ===");
const reportIframe = document.querySelector('iframe.viewer');
if (reportIframe) {
    console.log("üéØ –ù–∞–π–¥–µ–Ω iframe —Å –æ—Ç—á–µ—Ç–æ–º!");
    console.log(`üîó URL: ${reportIframe.src}`);
    
    // –î–µ–∫–æ–¥–∏—Ä—É–µ–º URL –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø—É—Ç–∏ –∫ –æ—Ç—á–µ—Ç—É
    try {
        const decodedUrl = decodeURIComponent(reportIframe.src);
        console.log(`üìÑ –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π URL: ${decodedUrl}`);
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—É—Ç—å –∫ –æ—Ç—á–µ—Ç—É
        const reportPath = decodedUrl.split('?')[1]?.split('&')[0];
        if (reportPath) {
            const decodedPath = decodeURIComponent(reportPath);
            console.log(`üìã –ü—É—Ç—å –∫ –æ—Ç—á–µ—Ç—É: ${decodedPath}`);
        }
    } catch (e) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è URL: ${e.message}`);
    }
}

// 10. –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –í–°–ï–ì–û –í –ë–£–§–ï–† –û–ë–ú–ï–ù–ê
// ========================================
console.log("=== –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –í –ë–£–§–ï–† –û–ë–ú–ï–ù–ê ===");

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
function copyToClipboard(text) {
    if (navigator.clipboard && window.isSecureContext) {
        navigator.clipboard.writeText(text).then(() => {
            console.log("‚úÖ –¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞");
        }).catch(err => {
            console.error("‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:", err);
        });
    } else {
        // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
        const textArea = document.createElement("textarea");
        textArea.value = text;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand("copy");
        document.body.removeChild(textArea);
        console.log("‚úÖ –¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ (fallback)");
    }
}

// –°–æ–±–∏—Ä–∞–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
const pageInfo = {
    url: window.location.href,
    title: document.title,
    timestamp: new Date().toISOString(),
    iframeInfo: Array.from(iframes).map(iframe => ({
        id: iframe.id,
        className: iframe.className,
        src: iframe.src
    })),
    reportElements: Array.from(reportElements).map(el => ({
        id: el.id,
        className: el.className,
        tagName: el.tagName
    })),
    dataTables: Array.from(dataTables).map(table => ({
        id: table.id,
        className: table.className,
        rows: table.rows.length,
        columns: table.rows[0]?.cells.length || 0
    })),
    buttons: Array.from(allButtons).map(btn => ({
        id: btn.id,
        className: btn.className,
        text: btn.textContent.trim(),
        tagName: btn.tagName
    })),
    inputs: Array.from(allInputs).map(input => ({
        id: input.id,
        name: input.name,
        type: input.type,
        className: input.className
    })),
    html: document.documentElement.outerHTML
};

// –ö–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
copyToClipboard(JSON.stringify(pageInfo, null, 2));

console.log("üéØ –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!");
console.log("üìã –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≤—Å—Ç–∞–≤–∏—Ç—å –µ—ë –≤ —á–∞—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞");

// 11. –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ï–¢–ï–í–´–• –ó–ê–ü–†–û–°–û–í
// ========================================
console.log("=== –°–ï–¢–ï–í–´–ï –ó–ê–ü–†–û–°–´ ===");
console.log("üí° –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∫–ª–∞–¥–∫—É Network –≤ DevTools –∏ –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É");
console.log("üîç –ò—â–∏—Ç–µ –∑–∞–ø—Ä–æ—Å—ã —Å —Ç–∏–ø–∞–º–∏: XHR, Fetch, Document");
console.log("üìä –û—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω—ã –∑–∞–ø—Ä–æ—Å—ã –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞");

// 12. –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –ö–û–ú–ê–ù–î–´ –î–õ–Ø SQL SERVER REPORTING SERVICES
// ========================================
console.log("=== –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –ö–û–ú–ê–ù–î–´ –î–õ–Ø SSRS ===");
console.log("üí° –î–ª—è —Ä–∞–±–æ—Ç—ã —Å iframe SSRS –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:");
console.log("1. –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –Ω–∞ iframe: document.querySelector('iframe.viewer')");
console.log("2. –ò—â–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤–Ω—É—Ç—Ä–∏ iframe");
console.log("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Network –≤–∫–ª–∞–¥–∫—É –Ω–∞ XHR –∑–∞–ø—Ä–æ—Å—ã –∫ ReportServer");
