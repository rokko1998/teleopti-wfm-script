"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–≥–∏–æ–Ω–∞–º–∏ (—Ä–∞–±–æ—á–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞).
"""

import time
from typing import List
from loguru import logger
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains
from selenium.common.exceptions import NoSuchElementException


def clear_workload_selection(driver):
    """
    –û—á–∏—â–∞–µ—Ç –ø—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫ –æ—Ç —Å—Ç–∞—Ä—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤.
    ‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ù–ï –ù–ê–ñ–ê–¢–¨ –ù–ê –í–ï–†–•–ù–Æ–Æ –ö–ù–û–ü–ö–£ (–Ω–∞–≤—ã–∫–∏)!
    –ù–ê–ô–¢–ò –í–°–ï –ö–ù–û–ü–ö–ò, –ü–†–û–ü–£–°–¢–ò–¢–¨ –ü–ï–†–í–£–Æ, –ö–õ–ò–ö–ù–£–¢–¨ –í–¢–û–†–£–Æ!
    """
    try:
        logger.info("üßπ –û—á–∏—â–∞–µ–º –ø—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫ –æ—Ç —Å—Ç–∞—Ä—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤...")
        logger.info("üîç –ò—â–µ–º –í–°–ï –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ...")

        # –ù–∞—Ö–æ–¥–∏–º –í–°–ï –∫–Ω–æ–ø–∫–∏ —Å src="images/left_all_light.gif"
        all_clear_buttons = driver.find_elements(
            By.XPATH,
            "//img[contains(@src, 'images/left_all_light.gif')]"
        )

        logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏: {len(all_clear_buttons)}")

        if len(all_clear_buttons) >= 2:
            # –ü–†–û–ü–£–°–ö–ê–ï–ú –ü–ï–†–í–£–Æ (–Ω–∞–≤—ã–∫–∏), –ö–õ–ò–ö–ê–ï–ú –í–¢–û–†–£–Æ (—Ä–∞–±–æ—á–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞)
            logger.info("üö® –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é –∫–Ω–æ–ø–∫—É (–Ω–∞–≤—ã–∫–∏)...")
            logger.info("‚úÖ –ö–ª–∏–∫–∞–µ–º –ø–æ –í–¢–û–†–û–ô –∫–Ω–æ–ø–∫–µ (—Ä–∞–±–æ—á–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞)...")

            workload_clear_button = all_clear_buttons[1]  # –í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞ (–∏–Ω–¥–µ–∫—Å 1)
            workload_clear_button.click()
            time.sleep(2)  # –ü–∞—É–∑–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
            logger.info("‚úÖ –ü—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–µ–π –Ω–∞–≥—Ä—É–∑–∫–∏ –æ—á–∏—â–µ–Ω (–í–¢–û–†–ê–Ø –∫–Ω–æ–ø–∫–∞)")
        elif len(all_clear_buttons) == 1:
            logger.warning("‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ - –≤–æ–∑–º–æ–∂–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å")
            logger.info("üîÑ –ü—Ä–æ–±—É–µ–º –∫–ª–∏–∫–Ω—É—Ç—å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É...")
            all_clear_buttons[0].click()
            time.sleep(2)
            logger.info("‚úÖ –ö–ª–∏–∫–Ω—É–ª–∏ –ø–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –Ω–∞–π–¥–µ–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–µ")
        else:
            logger.error("‚ùå –ö–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            raise Exception("–ö–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏: {e}")
        # –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –≤ —Å–µ–∫—Ü–∏–∏ "–†–∞–±–æ—á–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞"
        try:
            logger.info("üîÑ –ü—Ä–æ–±—É–µ–º –ø–æ–∏—Å–∫ –¢–û–õ–¨–ö–û –≤ —Å–µ–∫—Ü–∏–∏ '–†–∞–±–æ—á–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞'...")
            clear_button = driver.find_element(
                By.XPATH,
                "//td[contains(normalize-space(.),'–†–∞–±–æ—á–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞')]/following-sibling::td//img[contains(@src, 'left_all')]"
            )
            clear_button.click()
            time.sleep(2)
            logger.info("‚úÖ –ü—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫ –æ—á–∏—â–µ–Ω (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫)")
        except Exception as e2:
            logger.warning(f"‚ö†Ô∏è –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e2}")
            logger.warning("‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –æ—á–∏—Å—Ç–∫–∏ - –±—É–¥–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —Ä–µ–≥–∏–æ–Ω–∞–º")


def find_workload_left_select(driver):
    """
    –ù–∞—Ö–æ–¥–∏—Ç –ª–µ–≤—ã–π —Å–µ–ª–µ–∫—Ç –¥–ª—è —Ä–∞–±–æ—á–µ–π –Ω–∞–≥—Ä—É–∑–∫–∏.
    """
    try:
        workload_left_select = WebDriverWait(driver, 15).until(
            EC.presence_of_element_located((
                By.XPATH,
                "//td[contains(normalize-space(.),'–†–∞–±–æ—á–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞')]/following-sibling::td//select[@multiple][1]"
            ))
        )
        logger.info("‚úÖ –ù–∞–π–¥–µ–Ω –ª–µ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–µ–π –Ω–∞–≥—Ä—É–∑–∫–∏")
        return workload_left_select
    except Exception as e:
        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª–µ '–†–∞–±–æ—á–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞': {e}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        try:
            all_td = driver.find_elements(By.TAG_NAME, "td")
            field_names = [td.text.strip() for td in all_td if td.text.strip() and len(td.text.strip()) < 100]
            logger.info(f"üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {field_names}")
        except:
            logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª–µ–π")
        raise


def wait_for_workload_options(workload_left_select):
    """
    –ñ–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –æ–ø—Ü–∏–π –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–±–æ—á–µ–π –Ω–∞–≥—Ä—É–∑–∫–∏.
    """
    logger.info("‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –æ–ø—Ü–∏–π –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–±–æ—á–µ–π –Ω–∞–≥—Ä—É–∑–∫–∏...")

    # –ñ–¥–µ–º –ø–æ–∫–∞ –≤ —Å–ø–∏—Å–∫–µ –ø–æ—è–≤—è—Ç—Å—è –æ–ø—Ü–∏–∏
    for i in range(10):  # –º–∞–∫—Å 10 —Å–µ–∫—É–Ω–¥
        options = workload_left_select.find_elements(By.TAG_NAME, "option")
        if len(options) > 1:  # –±–æ–ª—å—à–µ —á–µ–º –ø—É—Å—Ç–∞—è –æ–ø—Ü–∏—è
            logger.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(options)} –æ–ø—Ü–∏–π")
            break
        time.sleep(1)
        logger.info(f"‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –æ–ø—Ü–∏–π... ({i+1}/10)")
    else:
        logger.warning("‚ö†Ô∏è –°–ø–∏—Å–æ–∫ –æ–ø—Ü–∏–π –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é")

    time.sleep(1)  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞


def show_available_regions(workload_left_select):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
    """
    available_options = workload_left_select.find_elements(By.TAG_NAME, "option")
    logger.info(f"üìã –í—Å–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ –æ–ø—Ü–∏–π: {len(available_options)}")
    if available_options:
        logger.info(f"üìã –ü–µ—Ä–≤—ã–µ 10 –æ–ø—Ü–∏–π: {[(opt.get_dom_attribute('value'), opt.text.strip()) for opt in available_options[:10]]}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –í–°–ï –¥–æ—Å—Ç—É–ø–Ω—ã–µ ID –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –∫–æ–Ω—Ñ–∏–≥–æ–º
        all_values = [opt.get_dom_attribute('value') for opt in available_options if opt.get_dom_attribute('value')]
        logger.info(f"üìã –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ ID —Ä–µ–≥–∏–æ–Ω–æ–≤: {sorted(all_values)}")
    else:
        logger.error("‚ùå –°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–µ–π –Ω–∞–≥—Ä—É–∑–∫–∏ –ø—É—Å—Ç–æ–π!")


def select_region(driver, workload_left_select, region_id: str) -> bool:
    """
    –í—ã–±–∏—Ä–∞–µ—Ç —Ä–µ–≥–∏–æ–Ω –ø–æ ID –∏–∑ –ª–µ–≤–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç –≤ –ø—Ä–∞–≤—ã–π.

    Returns:
        bool: True –µ—Å–ª–∏ —Ä–µ–≥–∏–æ–Ω —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω, False –∏–Ω–∞—á–µ
    """
    try:
        logger.info(f'üéØ –ò—â–µ–º —Ä–µ–≥–∏–æ–Ω —Å ID: {region_id}')

        # –ò—â–µ–º –æ–ø—Ü–∏—é –ø–æ value (ID —Ä–µ–≥–∏–æ–Ω–∞)
        opt = workload_left_select.find_element(By.XPATH, f".//option[@value='{region_id}']")
        region_name = opt.text.strip()
        logger.info(f'‚úÖ –ù–∞–π–¥–µ–Ω —Ä–µ–≥–∏–æ–Ω: {region_id} = "{region_name}"')

        # –°–ø–æ—Å–æ–± 1: –ü—Ä–æ–±—É–µ–º –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ —á–µ—Ä–µ–∑ ActionChains
        try:
            logger.info(f'üñ±Ô∏è –ü—Ä–æ–±—É–µ–º –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ ActionChains –ø–æ —Ä–µ–≥–∏–æ–Ω—É {region_id}')
            driver.execute_script("arguments[0].scrollIntoView(true);", opt)
            time.sleep(0.5)
            ActionChains(driver).move_to_element(opt).double_click().perform()
            time.sleep(1)
            logger.info(f'‚úÖ –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω –¥–ª—è {region_id}')
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")

            # –°–ø–æ—Å–æ–± 2: –ü—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ JavaScript
            try:
                logger.info(f'üñ±Ô∏è –ü—Ä–æ–±—É–µ–º JavaScript –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –¥–ª—è {region_id}')
                driver.execute_script("""
                    var opt = arguments[0];
                    var event = new MouseEvent('dblclick', { bubbles: true, cancelable: true });
                    opt.dispatchEvent(event);
                """, opt)
                time.sleep(1)
                logger.info(f'‚úÖ JavaScript –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω –¥–ª—è {region_id}')
            except Exception as e2:
                logger.error(f"‚ùå JavaScript –∫–ª–∏–∫ —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e2}")
                return False

        return True

    except NoSuchElementException:
        logger.warning(f"‚ùå –†–µ–≥–∏–æ–Ω —Å ID '{region_id}' –ù–ï –ù–ê–ô–î–ï–ù –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–±–æ—á–µ–π –Ω–∞–≥—Ä—É–∑–∫–∏")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –í–°–ï –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        available_options = workload_left_select.find_elements(By.TAG_NAME, "option")
        all_values = [opt.get_dom_attribute('value') for opt in available_options if opt.get_dom_attribute('value')]
        logger.warning(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ ID: {sorted(all_values)}")

        # –ò—â–µ–º –ø–æ—Ö–æ–∂–∏–µ ID (–º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã)
        similar = [v for v in all_values if region_id in v or v in region_id]
        if similar:
            logger.info(f"–í–æ–∑–º–æ–∂–Ω–æ –ø–æ—Ö–æ–∂–∏–µ ID: {similar}")

        return False

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ä–µ–≥–∏–æ–Ω–æ–º {region_id}: {e}")
        return False


def verify_selected_regions(driver, expected_region_ids: List[str]):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ —Ä–µ–≥–∏–æ–Ω—ã –±—ã–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω—ã –≤ –ø—Ä–∞–≤–æ–º —Å–ø–∏—Å–∫–µ.
    """
    logger.info("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ä–µ–≥–∏–æ–Ω—ã –≤—ã–±—Ä–∞–Ω—ã...")
    time.sleep(2)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–∞—É–∑—É –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏

    # –ü—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫
    right_select_xpaths = [
        # –û—Å–Ω–æ–≤–Ω–æ–π XPath
        "//td[contains(normalize-space(.),'–†–∞–±–æ—á–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞')]/following-sibling::td//select[@multiple][2]",
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        "//td[contains(text(),'–†–∞–±–æ—á–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞')]/following-sibling::td//select[@multiple][position()=2]",
        "//table//td[contains(.,'–†–∞–±–æ—á–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞')]/following-sibling::td//select[@multiple][last()]",
        # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö select –∏ –≤–∑—è—Ç–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
        "(//td[contains(normalize-space(.),'–†–∞–±–æ—á–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞')]/following-sibling::td//select[@multiple])[last()]"
    ]

    workload_right_select = None
    for xpath in right_select_xpaths:
        try:
            workload_right_select = driver.find_element(By.XPATH, xpath)
            logger.info(f"‚úÖ –ü—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω –ø–æ XPath: {xpath}")
            break
        except:
            continue

    if not workload_right_select:
        logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫, –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ JavaScript...")
        try:
            # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ JavaScript
            js_code = """
            var tables = document.getElementsByTagName('table');
            for (var i = 0; i < tables.length; i++) {
                var tds = tables[i].getElementsByTagName('td');
                for (var j = 0; j < tds.length; j++) {
                    if (tds[j].textContent.includes('–†–∞–±–æ—á–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞')) {
                        var selects = tds[j].parentNode.getElementsByTagName('select');
                        if (selects.length >= 2) {
                            return selects[1]; // –ü—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫
                        }
                    }
                }
            }
            return null;
            """
            workload_right_select = driver.execute_script(js_code)
            if workload_right_select:
                logger.info("‚úÖ –ü—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ JavaScript")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è JavaScript –ø–æ–∏—Å–∫ —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")

    if not workload_right_select:
        logger.warning("‚ö†Ô∏è –ü—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–æ –ü–†–ï–î–ü–û–õ–ê–ì–ê–ï–ú —á—Ç–æ —Ä–µ–≥–∏–æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        logger.info(f"üìù –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º {expected_region_ids} –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º")
        return True  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º True, —Ç–∞–∫ –∫–∞–∫ –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω

    try:
        selected_regions = workload_right_select.find_elements(By.TAG_NAME, "option")

        if len(selected_regions) > 0:
            selected_names = [opt.text.strip() for opt in selected_regions]
            selected_ids = [opt.get_dom_attribute('value') for opt in selected_regions]
            logger.info(f"‚úÖ –†–ï–ì–ò–û–ù–´ –£–°–ü–ï–®–ù–û –í–´–ë–†–ê–ù–´:")
            logger.info(f"   üìç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(selected_regions)}")
            logger.info(f"   üìç –ù–∞–∑–≤–∞–Ω–∏—è: {selected_names}")
            logger.info(f"   üìç ID: {selected_ids}")
            return True
        else:
            logger.warning(f"‚ö†Ô∏è –ü—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π, –Ω–æ –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω")
            logger.info(f"üìù –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ —Ä–µ–≥–∏–æ–Ω—ã {expected_region_ids} –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return True  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º True, —Ç–∞–∫ –∫–∞–∫ –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω

    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø—Ä–∞–≤–æ–≥–æ —Å–ø–∏—Å–∫–∞: {e}")
        logger.info(f"üìù –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º {expected_region_ids} –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º")
        return True  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º True, —Ç–∞–∫ –∫–∞–∫ –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω


def setup_regions(driver, region_ids: List[str]) -> bool:
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–≥–∏–æ–Ω–æ–≤.

    Args:
        driver: WebDriver instance
        region_ids: –°–ø–∏—Å–æ–∫ ID —Ä–µ–≥–∏–æ–Ω–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞

    Returns:
        bool: True –µ—Å–ª–∏ –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
    """
    try:
        logger.info(f"üîç –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞–±–æ—á—É—é –Ω–∞–≥—Ä—É–∑–∫—É –¥–ª—è —Ä–µ–≥–∏–æ–Ω–æ–≤: {region_ids}")

        # –ù–∞—Ö–æ–¥–∏–º –ª–µ–≤—ã–π —Å–µ–ª–µ–∫—Ç (–¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏) –¥–ª—è —Ä–∞–±–æ—á–µ–π –Ω–∞–≥—Ä—É–∑–∫–∏
        logger.info("üîç –ò—â–µ–º –ø–æ–ª–µ '–†–∞–±–æ—á–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞'...")
        workload_left_select = find_workload_left_select(driver)

        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –æ–ø—Ü–∏–π –≤ —Å–ø–∏—Å–∫–µ
        wait_for_workload_options(workload_left_select)

        # –°–ù–ê–ß–ê–õ–ê –û–ß–ò–©–ê–ï–ú –ü–†–ê–í–´–ô –°–ü–ò–°–û–ö –æ—Ç —Å—Ç–∞—Ä—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤
        clear_workload_selection(driver)

        # –ü–û–°–õ–ï –û–ß–ò–°–¢–ö–ò –ù–£–ñ–ù–û –ó–ê–ù–û–í–û –ù–ê–ô–¢–ò –õ–ï–í–´–ô –°–ü–ò–°–û–ö!
        # –≠–ª–µ–º–µ–Ω—Ç workload_left_select –º–æ–≥ —Å—Ç–∞—Ç—å "stale" –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
        logger.info("üîÑ –ó–∞–Ω–æ–≤–æ –∏—â–µ–º –ª–µ–≤—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏...")
        time.sleep(1)  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ DOM
        workload_left_select = find_workload_left_select(driver)

        # –¢–µ–ø–µ—Ä—å –ø–æ–∫–∞–∂–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        show_available_regions(workload_left_select)

        # –í—ã–±–∏—Ä–∞–µ–º –∫–∞–∂–¥—ã–π —Ä–µ–≥–∏–æ–Ω
        successful_selections = 0
        for region_id in region_ids:
            if select_region(driver, workload_left_select, region_id):
                successful_selections += 1

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —á—Ç–æ-—Ç–æ –±—ã–ª–æ –≤—ã–±—Ä–∞–Ω–æ
        if successful_selections > 0:
            return verify_selected_regions(driver, region_ids)
        else:
            logger.error("‚ùå –ù–∏ –æ–¥–∏–Ω —Ä–µ–≥–∏–æ–Ω –Ω–µ –±—ã–ª –≤—ã–±—Ä–∞–Ω!")
            return False

    except Exception as e:
        logger.error(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê —Å —Ä–∞–±–æ—á–µ–π –Ω–∞–≥—Ä—É–∑–∫–æ–π: {e}")
        return False