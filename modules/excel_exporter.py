"""
–ú–æ–¥—É–ª—å –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –æ—Ç—á–µ—Ç–∞ –≤ Excel
"""

from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import logging
import time


class ExcelExporter:
    """–ö–ª–∞—Å—Å –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –æ—Ç—á–µ—Ç–∞ –≤ Excel"""

    def __init__(self, driver, logger):
        self.driver = driver
        self.logger = logger

    def wait_for_report_ready(self, timeout=60):
        """–î–æ–∂–¥–∞—Ç—å—Å—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–∞"""
        try:
            self.logger.info("‚è≥ –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–∞...")

            # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–æ–Ω–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞)
            save_button = WebDriverWait(self.driver, timeout).until(
                EC.presence_of_element_located((By.CSS_SELECTOR, "a[title*='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'], a[title*='Save'], button[title*='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'], button[title*='Save']"))
            )

            self.logger.info("‚úÖ –û—Ç—á–µ—Ç –≥–æ—Ç–æ–≤, –∫–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞")
            return True

        except Exception as e:
            self.logger.error(f"‚ùå –û—Ç—á–µ—Ç –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è –∑–∞ {timeout} —Å–µ–∫—É–Ω–¥: {e}")
            return False

    def find_save_button(self):
        """–ù–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"""
        try:
            # –ò—â–µ–º –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º
            save_selectors = [
                "a[title*='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å']",
                "a[title*='Save']",
                "button[title*='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å']",
                "button[title*='Save']",
                "input[value*='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å']",
                "input[value*='Save']",
                "[class*='save']",
                "[id*='save']"
            ]

            for selector in save_selectors:
                try:
                    save_button = self.driver.find_element(By.CSS_SELECTOR, selector)
                    if save_button.is_displayed() and save_button.is_enabled():
                        self.logger.info(f"‚úÖ –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞: {selector}")
                        return save_button
                except:
                    continue

            self.logger.error("‚ùå –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return None

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
            return None

    def click_save_button(self):
        """–ù–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"""
        try:
            save_button = self.find_save_button()
            if not save_button:
                return False

            self.logger.info("üíæ –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è...")
            save_button.click()

            # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é
            time.sleep(2)

            self.logger.info("‚úÖ –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞–∂–∞—Ç–∞")
            return True

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
            return False

    def select_excel_format(self):
        """–í—ã–±—Ä–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç Excel –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é"""
        try:
            self.logger.info("üìä –í—ã–±–∏—Ä–∞–µ–º —Ñ–æ—Ä–º–∞—Ç Excel...")

            # –ò—â–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ Excel –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º –º–µ–Ω—é
            excel_selectors = [
                "a[href*='Excel']",
                "a[title*='Excel']",
                "a[title*='excel']",
                "a[title*='–≠–∫—Å–µ–ª—å']",
                "a[title*='—ç–∫—Å–µ–ª—å']"
            ]

            for selector in excel_selectors:
                try:
                    excel_link = self.driver.find_element(By.CSS_SELECTOR, selector)
                    if excel_link.is_displayed():
                        self.logger.info("‚úÖ –°—Å—ã–ª–∫–∞ Excel –Ω–∞–π–¥–µ–Ω–∞")
                        excel_link.click()
                        self.logger.info("‚úÖ –§–æ—Ä–º–∞—Ç Excel –≤—ã–±—Ä–∞–Ω")
                        return True
                except:
                    continue

            # –ü–æ–∏—Å–∫ –ø–æ XPath (–±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π)
            try:
                excel_link = self.driver.find_element(By.XPATH, "//a[contains(text(), 'Excel') or contains(text(), 'excel') or contains(text(), '–≠–∫—Å–µ–ª—å') or contains(text(), '—ç–∫—Å–µ–ª—å')]")
                if excel_link.is_displayed():
                    self.logger.info("‚úÖ –°—Å—ã–ª–∫–∞ Excel –Ω–∞–π–¥–µ–Ω–∞ –ø–æ XPath")
                    excel_link.click()
                    self.logger.info("‚úÖ –§–æ—Ä–º–∞—Ç Excel –≤—ã–±—Ä–∞–Ω")
                    return True
            except:
                pass

            # –ü–æ–∏—Å–∫ –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é href
            try:
                excel_link = self.driver.find_element(By.XPATH, "//a[contains(@href, 'Excel') or contains(@href, 'excel')]")
                if excel_link.is_displayed():
                    self.logger.info("‚úÖ –°—Å—ã–ª–∫–∞ Excel –Ω–∞–π–¥–µ–Ω–∞ –ø–æ href")
                    excel_link.click()
                    self.logger.info("‚úÖ –§–æ—Ä–º–∞—Ç Excel –≤—ã–±—Ä–∞–Ω")
                    return True
            except:
                pass

            self.logger.error("‚ùå –°—Å—ã–ª–∫–∞ Excel –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º –º–µ–Ω—é")
            return False

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–æ—Ä–º–∞—Ç–∞ Excel: {e}")
            return False

    def export_to_excel(self, wait_time=60):
        """–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç –≤ Excel"""
        try:
            self.logger.info("üì§ –ù–∞—á–∏–Ω–∞–µ–º —ç–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–∞ –≤ Excel...")

            # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–∞
            if not self.wait_for_report_ready(timeout=wait_time):
                return False

            # –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            if not self.click_save_button():
                return False

            # –í—ã–±–∏—Ä–∞–µ–º —Ñ–æ—Ä–º–∞—Ç Excel
            if not self.select_excel_format():
                return False

            self.logger.info("‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            return True

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –≤ Excel: {e}")
            return False
