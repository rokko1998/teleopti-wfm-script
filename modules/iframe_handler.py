"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å iframe —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
"""
import time
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException
from loguru import logger


class IframeHandler:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å iframe —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏"""
    
    def __init__(self, driver, logger_instance=None):
        self.driver = driver
        self.logger = logger_instance or logger
    
    def switch_to_iframe(self, iframe_selector="iframe.viewer"):
        """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ iframe"""
        try:
            # –ò—â–µ–º iframe
            iframe = self.driver.find_element(By.CSS_SELECTOR, iframe_selector)
            if not iframe:
                self.logger.error("‚ùå Iframe –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
            
            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            self.driver.switch_to.frame(iframe)
            self.logger.info("‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ iframe")
            return True
            
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞ iframe: {e}")
            return False
    
    def switch_to_main_document(self):
        """–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç"""
        try:
            self.driver.switch_to.default_content()
            self.logger.info("‚úÖ –í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç")
            return True
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: {e}")
            return False
    
    def find_element_in_iframe(self, selector, timeout=10):
        """–ù–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ iframe"""
        try:
            # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –º—ã –≤ iframe
            if self.driver.current_url == self.driver.get_current_url():
                self.logger.warning("‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, –º—ã –Ω–µ –≤ iframe")
            
            # –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç
            element = WebDriverWait(self.driver, timeout).until(
                EC.presence_of_element_located((By.CSS_SELECTOR, selector))
            )
            
            if element:
                self.logger.info(f"‚úÖ –≠–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω: {selector}")
                return element
            else:
                self.logger.error(f"‚ùå –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: {selector}")
                return None
                
        except TimeoutException:
            self.logger.error(f"‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —ç–ª–µ–º–µ–Ω—Ç–∞: {selector}")
            return None
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —ç–ª–µ–º–µ–Ω—Ç–∞ {selector}: {e}")
            return None
    
    def wait_for_element_clickable(self, selector, timeout=10):
        """–î–æ–∂–¥–∞—Ç—å—Å—è –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞"""
        try:
            element = WebDriverWait(self.driver, timeout).until(
                EC.element_to_be_clickable((By.CSS_SELECTOR, selector))
            )
            self.logger.info(f"‚úÖ –≠–ª–µ–º–µ–Ω—Ç –∫–ª–∏–∫–∞–±–µ–ª–µ–Ω: {selector}")
            return element
        except TimeoutException:
            self.logger.error(f"‚ùå –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏: {selector}")
            return None
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏ {selector}: {e}")
            return None
    
    def wait_for_fields_unlock(self, wait_time=5):
        """–ñ–¥–∞—Ç—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª–µ–π"""
        self.logger.info(f"‚è≥ –ñ–¥–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª–µ–π {wait_time} —Å–µ–∫—É–Ω–¥...")
        time.sleep(wait_time)
        self.logger.info("‚úÖ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    
    def find_element_with_diagnostics(self, selector, timeout=10):
        """–ù–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π"""
        try:
            element = self.find_element_in_iframe(selector, timeout)
            if element:
                # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç–ª–µ–º–µ–Ω—Ç–µ
                element_id = element.get_attribute('id') or '–ù–µ—Ç ID'
                element_class = element.get_attribute('class') or '–ù–µ—Ç –∫–ª–∞—Å—Å–æ–≤'
                element_type = element.get_attribute('type') or '–ù–µ—Ç —Ç–∏–ø–∞'
                element_value = element.get_attribute('value') or '–ù–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è'
                element_tag = element.tag_name
                
                self.logger.info(f"üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ {selector}:")
                self.logger.info(f"   –¢–µ–≥: {element_tag}")
                self.logger.info(f"   ID: {element_id}")
                self.logger.info(f"   –ö–ª–∞—Å—Å—ã: {element_class}")
                self.logger.info(f"   –¢–∏–ø: {element_type}")
                self.logger.info(f"   –ó–Ω–∞—á–µ–Ω–∏–µ: {element_value}")
                
                return element
            else:
                self.logger.error(f"‚ùå –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {selector}")
                return None
                
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ —ç–ª–µ–º–µ–Ω—Ç–∞ {selector}: {e}")
            return None
