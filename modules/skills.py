"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∞–≤—ã–∫–∞–º–∏.
"""

import time
from typing import List, Dict, Any
from loguru import logger
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains


def find_skills_left_select(driver):
    """
    –ù–∞—Ö–æ–¥–∏—Ç –ª–µ–≤—ã–π —Å–µ–ª–µ–∫—Ç –¥–ª—è –Ω–∞–≤—ã–∫–æ–≤ (–≤–µ—Ä—Ö–Ω–∏–π –±–ª–æ–∫).
    """
    try:
        skills_left_select = WebDriverWait(driver, 15).until(
            EC.presence_of_element_located((
                By.XPATH,
                "//td[contains(normalize-space(.),'–ù–∞–≤—ã–∫–∏') or contains(normalize-space(.),'Skills')]/following-sibling::td//select[@multiple][1]"
            ))
        )
        logger.info("‚úÖ –ù–∞–π–¥–µ–Ω –ª–µ–≤—ã–π —Å–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤")
        return skills_left_select
    except Exception as e:
        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª–µ '–ù–∞–≤—ã–∫–∏': {e}")
        logger.error("‚ùå –û–°–¢–ê–ù–û–í–ö–ê: –ù–∞–≤—ã–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –ø—Ä–∏ —Ñ–ª–∞–≥–µ --with-skills!")
        raise


def add_skill(driver, skills_left_select, skill_id: str) -> bool:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–∞–≤—ã–∫ –ø–æ ID –≤ –ø—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫.

    Args:
        driver: WebDriver instance
        skills_left_select: –õ–µ–≤—ã–π —Å–µ–ª–µ–∫—Ç –Ω–∞–≤—ã–∫–æ–≤
        skill_id: ID –Ω–∞–≤—ã–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è

    Returns:
        bool: True –µ—Å–ª–∏ –Ω–∞–≤—ã–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω
    """
    try:
        logger.info(f"üéØ –í—ã–±–∏—Ä–∞–µ–º –Ω–∞–≤—ã–∫ ID: {skill_id}")

        # –ù–∞—Ö–æ–¥–∏–º –æ–ø—Ü–∏—é —Å –Ω—É–∂–Ω—ã–º value
        skill_option = skills_left_select.find_element(
            By.XPATH, f".//option[@value='{skill_id}']"
        )
        skill_name = skill_option.text.strip()
        logger.info(f"   üìç –ù–∞–π–¥–µ–Ω –Ω–∞–≤—ã–∫: {skill_name} (ID: {skill_id})")

        # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Ä–µ–≥–∏–æ–Ω–∞–º: –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –≤ –ø—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫
        logger.info(f"   üîÑ –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –Ω–∞–≤—ã–∫–∞...")
        ActionChains(driver).double_click(skill_option).perform()
        time.sleep(1.5)  # –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è –ø–∞—É–∑–∞ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞–≤—ã–∫ –ø–µ—Ä–µ–Ω–µ—Å—Å—è (–ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –µ–≥–æ –≤ –ø—Ä–∞–≤–æ–º —Å–ø–∏—Å–∫–µ)
        try:
            skills_right_select = driver.find_element(
                By.XPATH,
                "//td[contains(normalize-space(.),'–ù–∞–≤—ã–∫–∏') or contains(normalize-space(.),'Skills')]/following-sibling::td//select[@multiple][2]"
            )
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –æ–ø—Ü–∏—è —Å —ç—Ç–∏–º ID –≤ –ø—Ä–∞–≤–æ–º —Å–ø–∏—Å–∫–µ
            right_option = skills_right_select.find_element(
                By.XPATH, f".//option[@value='{skill_id}']"
            )
            logger.info(f"‚úÖ –ù–∞–≤—ã–∫ {skill_name} —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤ –ø—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫")
            return True
        except:
            logger.error(f"‚ùå –ù–∞–≤—ã–∫ {skill_name} –ù–ï –ü–ï–†–ï–ù–ï–°–ï–ù –≤ –ø—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫!")
            # –ù–ï –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –µ—Å–ª–∏ –Ω–∞–≤—ã–∫ –Ω–µ –ø–µ—Ä–µ–Ω–µ—Å—Å—è
            raise Exception(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–∞–≤—ã–∫ {skill_name} (ID: {skill_id}) –Ω–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω")

    except Exception as e:
        logger.error(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–∞–≤—ã–∫–∞ ID {skill_id}: {e}")
        logger.error("‚ùå –û–°–¢–ê–ù–û–í–ö–ê: –í—Å–µ –Ω–∞–≤—ã–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º!")
        raise


def verify_skills_selection(driver, expected_skills_ids: List[str]) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –≤—Å–µ –Ω–∞–≤—ã–∫–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ–ø–∞–ª–∏ –≤ –ø—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫.

    Args:
        driver: WebDriver instance
        expected_skills_ids: –°–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞–µ–º—ã—Ö ID –Ω–∞–≤—ã–∫–æ–≤

    Returns:
        bool: True –µ—Å–ª–∏ –≤—Å–µ –Ω–∞–≤—ã–∫–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã
    """
    logger.info("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤...")
    try:
        skills_right_select = driver.find_element(
            By.XPATH,
            "//td[contains(normalize-space(.),'–ù–∞–≤—ã–∫–∏') or contains(normalize-space(.),'Skills')]/following-sibling::td//select[@multiple][2]"
        )

        # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –Ω–∞–≤—ã–∫–∏
        selected_options = skills_right_select.find_elements(By.TAG_NAME, "option")

        if selected_options:
            selected_skills = []
            selected_ids = []
            for opt in selected_options:
                skill_value = opt.get_dom_attribute("value") or opt.get_attribute("value")
                skill_text = opt.text.strip()
                selected_skills.append(skill_text)
                selected_ids.append(skill_value)

            logger.info(f"‚úÖ –í –ø—Ä–∞–≤–æ–º —Å–ø–∏—Å–∫–µ –Ω–∞–≤—ã–∫–æ–≤: {len(selected_skills)} –Ω–∞–≤—ã–∫–æ–≤")
            logger.info(f"   üìç –ù–∞–∑–≤–∞–Ω–∏—è: {selected_skills}")
            logger.info(f"   üìç ID: {selected_ids}")

            # –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: –≤—Å–µ –ª–∏ –Ω–∞–≤—ã–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã?
            if len(selected_skills) != len(expected_skills_ids):
                logger.error(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ –≤—Å–µ –Ω–∞–≤—ã–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
                logger.error(f"   –û–∂–∏–¥–∞–ª–∏: {len(expected_skills_ids)} –Ω–∞–≤—ã–∫–æ–≤: {expected_skills_ids}")
                logger.error(f"   –ü–æ–ª—É—á–∏–ª–∏: {len(selected_skills)} –Ω–∞–≤—ã–∫–æ–≤: {selected_ids}")
                logger.error("‚ùå –û–°–¢–ê–ù–û–í–ö–ê: –°–∫—Ä–∏–ø—Ç –ù–ï –ú–û–ñ–ï–¢ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –±–µ–∑ –≤—Å–µ—Ö –Ω–∞–≤—ã–∫–æ–≤!")
                return False

            # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: –≤—Å–µ –ª–∏ –Ω—É–∂–Ω—ã–µ ID –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç?
            missing_skills = [skill_id for skill_id in expected_skills_ids if skill_id not in selected_ids]
            if missing_skills:
                logger.error(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞–≤—ã–∫–∏ —Å ID: {missing_skills}")
                logger.error(f"   –û–∂–∏–¥–∞–ª–∏: {expected_skills_ids}")
                logger.error(f"   –ü–æ–ª—É—á–∏–ª–∏: {selected_ids}")
                logger.error("‚ùå –û–°–¢–ê–ù–û–í–ö–ê: –°–∫—Ä–∏–ø—Ç –ù–ï –ú–û–ñ–ï–¢ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –±–µ–∑ –Ω—É–∂–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤!")
                return False

            logger.info("‚úÖ –í–°–ï –Ω–∞–≤—ã–∫–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö!")
            return True

        else:
            logger.error(f"‚ùå –ù–ê–í–´–ö–ò –ù–ï –í–´–ë–†–ê–ù–´! –ü—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π!")
            logger.error(f"‚ùå –û–∂–∏–¥–∞–ª–∏ –Ω–∞–≤—ã–∫–∏: {expected_skills_ids}")
            logger.error("‚ùå –û–°–¢–ê–ù–û–í–ö–ê: –°–∫—Ä–∏–ø—Ç –ù–ï –ú–û–ñ–ï–¢ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –±–µ–∑ –Ω–∞–≤—ã–∫–æ–≤!")
            return False

    except Exception as e:
        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤: {e}")
        logger.error("‚ùå –û–°–¢–ê–ù–û–í–ö–ê: –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–≤—ã–∫–æ–≤!")
        return False


def prepare_skills_from_config(config: Dict[str, Any]) -> List[str]:
    """
    –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.

    Args:
        config: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ YAML —Ñ–∞–π–ª–∞

    Returns:
        List[str]: –ü–ª–æ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ ID –Ω–∞–≤—ã–∫–æ–≤
    """
    skills_ids = []
    skills_config = config.get("skills", {})

    for skill_name, ids_list in skills_config.items():
        if ids_list and isinstance(ids_list, list):
            skills_ids.extend(ids_list)
            logger.info(f"   üìç –ù–∞–≤—ã–∫ '{skill_name}': {ids_list}")

    logger.info(f"‚úÖ –í—Å–µ–≥–æ –Ω–∞–≤—ã–∫–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {len(skills_ids)}")
    logger.info(f"   üî¢ ID –Ω–∞–≤—ã–∫–æ–≤: {skills_ids}")

    return skills_ids


def setup_skills(driver, skills_ids: List[str]) -> bool:
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–≤—ã–∫–æ–≤.

    Args:
        driver: WebDriver instance
        skills_ids: –°–ø–∏—Å–æ–∫ ID –Ω–∞–≤—ã–∫–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è

    Returns:
        bool: True –µ—Å–ª–∏ –≤—Å–µ –Ω–∞–≤—ã–∫–∏ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
    """
    if not skills_ids:
        logger.info("‚ÑπÔ∏è –°–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤ –ø—É—Å—Ç–æ–π - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É")
        return True

    try:
        logger.info(f"üéØ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞–≤—ã–∫–∏ (–ë–ï–ó –û–ß–ò–°–¢–ö–ò): {skills_ids}")

        # –ù–∞—Ö–æ–¥–∏–º –ª–µ–≤—ã–π —Å–µ–ª–µ–∫—Ç –¥–ª—è –Ω–∞–≤—ã–∫–æ–≤ (–≤–µ—Ä—Ö–Ω–∏–π –±–ª–æ–∫)
        logger.info("üîç –ò—â–µ–º –ø–æ–ª–µ '–ù–∞–≤—ã–∫–∏'...")
        skills_left_select = find_skills_left_select(driver)

        # –í—ã–±–∏—Ä–∞–µ–º –Ω–∞–≤—ã–∫–∏ –ø–æ ID (–ë–ï–ó –û–ß–ò–°–¢–ö–ò –ø—Ä–∞–≤–æ–≥–æ —Å–ø–∏—Å–∫–∞)
        successfully_added = 0

        for skill_id in skills_ids:
            if add_skill(driver, skills_left_select, skill_id):
                successfully_added += 1

        logger.info(f"üìä –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∞–≤—ã–∫–æ–≤: {successfully_added}/{len(skills_ids)}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞–≤—ã–∫–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ–ø–∞–ª–∏ –≤ –ø—Ä–∞–≤—ã–π —Å–ø–∏—Å–æ–∫
        return verify_skills_selection(driver, skills_ids)

    except Exception as e:
        logger.error(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –Ω–∞–≤—ã–∫–æ–≤: {e}")
        logger.error("‚ùå –û–°–¢–ê–ù–û–í–ö–ê: –°–∫—Ä–∏–ø—Ç –ù–ï –ú–û–ñ–ï–¢ —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –Ω–∞–≤—ã–∫–æ–≤!")
        return False


def show_page_diagnostics(driver):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
    """
    try:
        logger.info("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
        logger.info(f"‚úÖ Title: {driver.title}")
        logger.info(f"‚úÖ URL: {driver.current_url}")

        # –ò—â–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        body_elements = driver.find_elements(By.TAG_NAME, "body")
        div_elements = driver.find_elements(By.TAG_NAME, "div")
        form_elements = driver.find_elements(By.TAG_NAME, "form")
        table_elements = driver.find_elements(By.TAG_NAME, "table")
        input_elements = driver.find_elements(By.TAG_NAME, "input")
        select_elements = driver.find_elements(By.TAG_NAME, "select")

        logger.info(f"üìç –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:")
        logger.info(f"   <body>: {len(body_elements)}")
        logger.info(f"   <div>: {len(div_elements)}")
        logger.info(f"   <form>: {len(form_elements)}")
        logger.info(f"   <table>: {len(table_elements)}")
        logger.info(f"   <input>: {len(input_elements)}")
        logger.info(f"   <select>: {len(select_elements)}")

        if len(body_elements) > 0 and len(div_elements) > 0:
            logger.info("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ (–µ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã)")
        else:
            logger.warning("‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")