"""
–ú–æ–¥—É–ª—å –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –æ—Ç—á–µ—Ç–∞
"""

from selenium.webdriver.support.ui import Select
import logging
import time


class FormFiller:
    """–ö–ª–∞—Å—Å –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –æ—Ç—á–µ—Ç–∞"""

    def __init__(self, driver, logger, iframe_handler, form_elements):
        self.driver = driver
        self.logger = logger
        self.iframe_handler = iframe_handler
        self.form_elements = form_elements

    def set_report_period(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞"""
        try:
            self.logger.info("[form_filler] üìä –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞: –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞
            period_selector = self.form_elements.get_element_selector('period_dropdown')
            period_value = self.form_elements.get_period_value('–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π')
            
            if not period_selector or not period_value:
                self.logger.error("[form_filler] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–µ–ª–µ–∫—Ç–æ—Ä –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞")
                return False
            
            # –ò—â–µ–º –ø–æ–ª–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞
            period_field = self.iframe_handler.find_element_in_iframe(period_selector)
            
            if not period_field:
                self.logger.error("[form_filler] ‚ùå –ü–æ–ª–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ select —ç–ª–µ–º–µ–Ω—Ç
            if period_field.tag_name != 'select':
                self.logger.error(f"[form_filler] ‚ùå –≠–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è select (—Ç–µ–≥: {period_field.tag_name})")
                return False
            
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Select –∏ –≤—ã–±–∏—Ä–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
            period_select = Select(period_field)
            period_select.select_by_value(period_value)
            
            self.logger.info(f"[form_filler] ‚úÖ –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π (–∑–Ω–∞—á–µ–Ω–∏–µ: {period_value})")
            
            # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è postback (ASP.NET WebForms)
            self.logger.info("[form_filler] ‚è≥ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è postback –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞...")
            time.sleep(3)
            
            # –ü–æ—Å–ª–µ postback –∏—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞–Ω–æ–≤–æ (–∏–∑–±–µ–≥–∞–µ–º stale element reference)
            self.logger.info("[form_filler] üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ postback...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—è –¥–∞—Ç —Å—Ç–∞–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
            start_date_selector = self.form_elements.get_element_selector('start_date_field')
            start_date_field = self.iframe_handler.find_element_in_iframe(start_date_selector)
            
            if start_date_field and not start_date_field.get_attribute('disabled') and 'aspNetDisabled' not in start_date_field.get_attribute('class'):
                self.logger.info("[form_filler] ‚úÖ –ü–æ–ª—è –¥–∞—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞")
            else:
                self.logger.warning("[form_filler] ‚ö†Ô∏è –ü–æ–ª—è –¥–∞—Ç –≤—Å–µ –µ—â–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã, –≤–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞")
                time.sleep(2)
            
            return True
            
        except Exception as e:
            self.logger.error(f"[form_filler] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞: {e}")
            return False

    def set_start_date(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –æ—Ç—á–µ—Ç–∞"""
        try:
            self.logger.info("[form_filler] üìÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –æ—Ç—á–µ—Ç–∞...")

            # –ü–æ–ª—É—á–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –∏ —Ç–µ—Å—Ç–æ–≤—É—é –¥–∞—Ç—É
            start_date_selector = self.form_elements.get_element_selector('start_date_field')
            start_date = self.form_elements.get_test_date('start_date')

            # –ò—â–µ–º –ø–æ–ª–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞
            start_date_field = self.iframe_handler.find_element_in_iframe(start_date_selector)

            if not start_date_field:
                self.logger.error("[form_filler] ‚ùå –ü–æ–ª–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                return False

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º JavaScript –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è (–ø–æ–ª–µ –∏–º–µ–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏)
            self.logger.info(f"[form_filler] üìù –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É —á–µ—Ä–µ–∑ JavaScript: {start_date}")
            self.driver.execute_script("arguments[0].value = arguments[1];", start_date_field, start_date)

            # –£ –ø–æ–ª—è –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –µ—Å—Ç—å onchange –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –≤—ã–∑—ã–≤–∞–µ–º –µ–≥–æ
            self.logger.info("[form_filler] üîÑ –í—ã–∑—ã–≤–∞–µ–º onchange —Å–æ–±—ã—Ç–∏–µ...")
            self.driver.execute_script("arguments[0].onchange();", start_date_field)

            # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è postback (ASP.NET WebForms)
            self.logger.info("[form_filler] ‚è≥ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è postback –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∞—Ç—ã...")
            time.sleep(3)

            # –ü–æ—Å–ª–µ postback –∏—â–µ–º —ç–ª–µ–º–µ–Ω—Ç –∑–∞–Ω–æ–≤–æ (–∏–∑–±–µ–≥–∞–µ–º stale element reference)
            start_date_field = self.iframe_handler.find_element_in_iframe(start_date_selector)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å
            actual_value = start_date_field.get_attribute('value')
            if actual_value == start_date:
                self.logger.info(f"[form_filler] ‚úÖ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {actual_value}")
            else:
                self.logger.warning(f"[form_filler] ‚ö†Ô∏è –î–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è: {actual_value}")

            return True

        except Exception as e:
            self.logger.error(f"[form_filler] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞: {e}")
            return False

    def set_end_date(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞"""
        try:
            self.logger.info("[form_filler] üìÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞...")

            # –ü–æ–ª—É—á–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –∏ —Ç–µ—Å—Ç–æ–≤—É—é –¥–∞—Ç—É
            end_date_selector = self.form_elements.get_element_selector('end_date_field')
            end_date = self.form_elements.get_test_date('end_date')

            # –ò—â–µ–º –ø–æ–ª–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è
            end_date_field = self.iframe_handler.find_element_in_iframe(end_date_selector)

            if not end_date_field:
                self.logger.error("[form_filler] ‚ùå –ü–æ–ª–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                return False

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º JavaScript –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è (–ø–æ–ª–µ –∏–º–µ–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏)
            self.logger.info(f"[form_filler] üìù –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É —á–µ—Ä–µ–∑ JavaScript: {end_date}")
            self.driver.execute_script("arguments[0].value = arguments[1];", end_date_field, end_date)

            # –£ –ø–æ–ª—è –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ—Ç onchange –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞, –ø—Ä–æ—Å—Ç–æ –∂–¥–µ–º
            self.logger.info("[form_filler] ‚è≥ –ñ–¥–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
            time.sleep(2)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å
            actual_value = end_date_field.get_attribute('value')
            if actual_value == end_date:
                self.logger.info(f"[form_filler] ‚úÖ –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {actual_value}")
            else:
                self.logger.warning(f"[form_filler] ‚ö†Ô∏è –î–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è: {actual_value}")

            return True

        except Exception as e:
            self.logger.error(f"[form_filler] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è: {e}")
            return False

    def set_reason(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏"""
        try:
            self.logger.info("[form_filler] üîç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è")

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            if not self.iframe_handler.switch_to_iframe():
                return False

            try:
                # 1. –°–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
                dropdown_toggle_selector = self.form_elements.get_dropdown_selector('reason_dropdown_toggle')
                if not dropdown_toggle_selector:
                    self.logger.error("[form_filler] ‚ùå –°–µ–ª–µ–∫—Ç–æ—Ä –∫–Ω–æ–ø–∫–∏ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return False

                dropdown_toggle = self.iframe_handler.find_element_in_iframe(dropdown_toggle_selector)
                if not dropdown_toggle:
                    self.logger.error("[form_filler] ‚ùå –ö–Ω–æ–ø–∫–∞ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    return False

                self.logger.info("[form_filler] üìã –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è...")
                dropdown_toggle.click()

                # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
                time.sleep(2)

                # 2. –¢–µ–ø–µ—Ä—å –Ω–∞–∂–∏–º–∞–µ–º "–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ" —á—Ç–æ–±—ã —Å–Ω—è—Ç—å –≤—Å–µ –≥–∞–ª–æ—á–∫–∏
                select_all_selector = self.form_elements.get_dropdown_selector('reason_select_all')
                if not select_all_selector:
                    self.logger.error("[form_filler] ‚ùå –°–µ–ª–µ–∫—Ç–æ—Ä '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return False

                select_all_checkbox = self.iframe_handler.find_element_in_iframe(select_all_selector)
                if not select_all_checkbox:
                    self.logger.error("[form_filler] ‚ùå –ß–µ–∫–±–æ–∫—Å '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return False

                self.logger.info("[form_filler] üóëÔ∏è –°–Ω–∏–º–∞–µ–º –≤—Å–µ –≥–∞–ª–æ—á–∫–∏ —á–µ—Ä–µ–∑ '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ'...")
                select_all_checkbox.click()

                # –ñ–¥–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
                time.sleep(1)

                # 3. –¢–µ–ø–µ—Ä—å –≤—ã–±–∏—Ä–∞–µ–º –Ω—É–∂–Ω—ã–π —á–µ–∫–±–æ–∫—Å
                checkbox_selector = self.form_elements.get_dropdown_selector('reason_checkbox')
                if not checkbox_selector:
                    self.logger.error("[form_filler] ‚ùå –°–µ–ª–µ–∫—Ç–æ—Ä —á–µ–∫–±–æ–∫—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return False

                checkbox = self.iframe_handler.find_element_in_iframe(checkbox_selector)
                if not checkbox:
                    self.logger.error("[form_filler] ‚ùå –ß–µ–∫–±–æ–∫—Å '–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return False

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã–±—Ä–∞–Ω –ª–∏ —É–∂–µ —á–µ–∫–±–æ–∫—Å
                if not checkbox.is_selected():
                    self.logger.info("[form_filler] ‚úÖ –í—ã–±–∏—Ä–∞–µ–º —á–µ–∫–±–æ–∫—Å '–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G'...")
                    checkbox.click()
                else:
                    self.logger.info("[form_filler] ‚úÖ –ß–µ–∫–±–æ–∫—Å '–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G' —É–∂–µ –≤—ã–±—Ä–∞–Ω")

                # –ñ–¥–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞
                time.sleep(1)

                self.logger.info("[form_filler] ‚úÖ –ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: –ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G")
                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.iframe_handler.switch_to_main_document()

        except Exception as e:
            self.logger.error(f"[form_filler] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.iframe_handler.switch_to_main_document()
            except:
                pass
            return False

    def submit_report(self):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞"""
        try:
            self.logger.info("[form_filler] üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞...")

            # –ü–æ–ª—É—á–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
            submit_selector = self.form_elements.get_element_selector('submit_button')

            # –ò—â–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
            submit_button = self.iframe_handler.find_element_in_iframe(submit_selector)

            if not submit_button:
                self.logger.error("[form_filler] ‚ùå –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return False

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞
            if not submit_button.is_enabled():
                self.logger.error("[form_filler] ‚ùå –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞")
                return False

            # –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ
            self.logger.info("[form_filler] üíæ –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É '–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–∞'...")
            submit_button.click()

            self.logger.info("[form_filler] ‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            return True

        except Exception as e:
            self.logger.error(f"[form_filler] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á–µ—Ç–∞: {e}")
            return False
