"""
–ú–æ–¥—É–ª—å –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –æ—Ç—á–µ—Ç–∞
"""

from selenium.webdriver.support.ui import Select
from loguru import logger
import time


class FormFiller:
    """–ö–ª–∞—Å—Å –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –æ—Ç—á–µ—Ç–∞"""

    def __init__(self, driver, logger, iframe_handler, form_elements):
        self.driver = driver
        self.logger = logger
        self.iframe_handler = iframe_handler
        self.form_elements = form_elements

    def set_report_period(self, period_name='–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π'):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞"""
        try:
            self.logger.info(f"üìä –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞: {period_name}")

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            if not self.iframe_handler.switch_to_iframe():
                return False

            try:
                # –ò—â–µ–º –ø–æ–ª–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
                period_selector = self.form_elements.get_element_selector('period_dropdown')
                period_field = self.iframe_handler.find_element_with_diagnostics(period_selector)

                if not period_field:
                    self.logger.error("‚ùå –ü–æ–ª–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    return False

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ SELECT —ç–ª–µ–º–µ–Ω—Ç
                if period_field.tag_name.lower() != 'select':
                    self.logger.error(f"‚ùå –ü–æ–ª–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è SELECT —ç–ª–µ–º–µ–Ω—Ç–æ–º. –ù–∞–π–¥–µ–Ω: {period_field.tag_name}")
                    self.logger.info(f"   ID —ç–ª–µ–º–µ–Ω—Ç–∞: {period_field.get_attribute('id')}")
                    self.logger.info(f"   –ö–ª–∞—Å—Å—ã —ç–ª–µ–º–µ–Ω—Ç–∞: {period_field.get_attribute('class')}")
                    return False

                # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞
                period_value = self.form_elements.get_period_value(period_name)
                if not period_value:
                    self.logger.error(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥: {period_name}")
                    return False

                # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Select –∏ –≤—ã–±–∏—Ä–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
                period_select = Select(period_field)
                period_select.select_by_value(period_value)

                self.logger.info(f"‚úÖ –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {period_name} (–∑–Ω–∞—á–µ–Ω–∏–µ: {period_value})")

                # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è postback (ASP.NET WebForms)
                self.logger.info("‚è≥ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è postback –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞...")
                time.sleep(3)

                # –ü–æ—Å–ª–µ postback –∏—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞–Ω–æ–≤–æ (–∏–∑–±–µ–≥–∞–µ–º stale element reference)
                self.logger.info("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ postback...")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—è –¥–∞—Ç —Å—Ç–∞–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
                start_date_selector = self.form_elements.get_element_selector('start_date_field')
                start_date_field = self.iframe_handler.find_element_in_iframe(start_date_selector)

                if start_date_field and not start_date_field.get_attribute('disabled') and 'aspNetDisabled' not in start_date_field.get_attribute('class'):
                    self.logger.info("‚úÖ –ü–æ–ª—è –¥–∞—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞")
                else:
                    self.logger.warning("‚ö†Ô∏è –ü–æ–ª—è –¥–∞—Ç –≤—Å–µ –µ—â–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã, –≤–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞")
                    time.sleep(2)

                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.iframe_handler.switch_to_main_document()

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.iframe_handler.switch_to_main_document()
            except:
                pass
            return False

    def set_start_date(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞"""
        try:
            self.logger.info("üìÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞")

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            if not self.iframe_handler.switch_to_iframe():
                return False

            try:
                # –ò—â–µ–º –ø–æ–ª–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞
                start_date_selector = self.form_elements.get_element_selector('start_date_field')
                start_date_field = self.iframe_handler.find_element_in_iframe(start_date_selector)

                if not start_date_field:
                    self.logger.error("‚ùå –ü–æ–ª–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    return False

                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –¥–∞—Ç—É
                start_date = self.form_elements.get_test_date('start_date')

                # –ò—Å–ø–æ–ª—å–∑—É–µ–º JavaScript –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è (–ø–æ–ª–µ –∏–º–µ–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏)
                self.logger.info(f"üìù –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É —á–µ—Ä–µ–∑ JavaScript: {start_date}")
                self.driver.execute_script("arguments[0].value = arguments[1];", start_date_field, start_date)

                # –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏–µ onchange –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ JavaScript –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
                self.logger.info("üîÑ –¢—Ä–∏–≥–≥–µ—Ä–∏–º onchange —Å–æ–±—ã—Ç–∏–µ...")
                self.driver.execute_script("arguments[0].onchange();", start_date_field)

                # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è postback (ASP.NET WebForms)
                self.logger.info("‚è≥ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è postback...")
                time.sleep(3)

                # –ü–æ—Å–ª–µ postback –∏—â–µ–º —ç–ª–µ–º–µ–Ω—Ç –∑–∞–Ω–æ–≤–æ (–∏–∑–±–µ–≥–∞–µ–º stale element reference)
                self.logger.info("üîç –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∑–∞–Ω–æ–≤–æ –ø–æ—Å–ª–µ postback...")
                start_date_field = self.iframe_handler.find_element_in_iframe(start_date_selector)
                if not start_date_field:
                    self.logger.error("‚ùå –≠–ª–µ–º–µ–Ω—Ç –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ postback")
                    return False

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å
                actual_value = start_date_field.get_attribute('value')
                if start_date in actual_value:
                    self.logger.info(f"‚úÖ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {start_date}")
                else:
                    self.logger.warning(f"‚ö†Ô∏è –î–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è: {actual_value}")

                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.iframe_handler.switch_to_main_document()

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.iframe_handler.switch_to_main_document()
            except:
                pass
            return False

    def set_end_date(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è"""
        try:
            self.logger.info("üìÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è")

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            if not self.iframe_handler.switch_to_iframe():
                return False

            try:
                # –ò—â–µ–º –ø–æ–ª–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è
                end_date_selector = self.form_elements.get_element_selector('end_date_field')
                end_date_field = self.iframe_handler.find_element_in_iframe(end_date_selector)

                if not end_date_field:
                    self.logger.error("‚ùå –ü–æ–ª–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    return False

                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –¥–∞—Ç—É
                end_date = self.form_elements.get_test_date('end_date')

                # –ò—Å–ø–æ–ª—å–∑—É–µ–º JavaScript –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è (–ø–æ–ª–µ –∏–º–µ–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏)
                self.logger.info(f"üìù –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É —á–µ—Ä–µ–∑ JavaScript: {end_date}")
                self.driver.execute_script("arguments[0].value = arguments[1];", end_date_field, end_date)

                # –£ –ø–æ–ª—è –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ—Ç onchange –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞, –ø—Ä–æ—Å—Ç–æ –∂–¥–µ–º
                self.logger.info("‚è≥ –ñ–¥–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
                time.sleep(2)

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å
                actual_value = end_date_field.get_attribute('value')
                if end_date in actual_value:
                    self.logger.info(f"‚úÖ –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {end_date}")
                else:
                    self.logger.warning(f"‚ö†Ô∏è –î–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è: {actual_value}")

                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.iframe_handler.switch_to_main_document()

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.iframe_handler.switch_to_main_document()
            except:
                pass
            return False

    def set_reason(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏"""
        try:
            self.logger.info("üîç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è")

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            if not self.iframe_handler.switch_to_iframe():
                return False

            try:
                # 1. –°–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
                dropdown_toggle_selector = self.form_elements.get_dropdown_selector('reason_dropdown_toggle')
                if not dropdown_toggle_selector:
                    self.logger.error("‚ùå –°–µ–ª–µ–∫—Ç–æ—Ä –∫–Ω–æ–ø–∫–∏ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return False

                dropdown_toggle = self.iframe_handler.find_element_in_iframe(dropdown_toggle_selector)
                if not dropdown_toggle:
                    self.logger.error("‚ùå –ö–Ω–æ–ø–∫–∞ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    return False

                self.logger.info("üìã –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è...")
                dropdown_toggle.click()

                # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
                time.sleep(2)

                # 2. –¢–µ–ø–µ—Ä—å –Ω–∞–∂–∏–º–∞–µ–º "–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ" —á—Ç–æ–±—ã —Å–Ω—è—Ç—å –≤—Å–µ –≥–∞–ª–æ—á–∫–∏
                select_all_selector = self.form_elements.get_dropdown_selector('reason_select_all')
                if not select_all_selector:
                    self.logger.error("‚ùå –°–µ–ª–µ–∫—Ç–æ—Ä '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return False

                # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —á–µ–∫–±–æ–∫—Å "–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ"
                select_all_checkbox = self.iframe_handler.find_element_in_iframe(select_all_selector)
                if not select_all_checkbox:
                    self.logger.warning("‚ö†Ô∏è –ß–µ–∫–±–æ–∫—Å '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ' –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —Ç–µ–∫—Å—Ç—É...")

                    # Fallback: –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É "–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ"
                    try:
                        select_all_checkbox = self.iframe_handler.find_element_in_iframe(
                            ("xpath", "//input[@type='checkbox' and following-sibling::label[contains(text(), '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ')]]")
                        )
                        if select_all_checkbox:
                            self.logger.info("‚úÖ –ß–µ–∫–±–æ–∫—Å '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ' –Ω–∞–π–¥–µ–Ω –ø–æ —Ç–µ–∫—Å—Ç—É")
                        else:
                            self.logger.warning("‚ö†Ô∏è –ß–µ–∫–±–æ–∫—Å '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ' –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–∞–∂–µ –ø–æ —Ç–µ–∫—Å—Ç—É, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
                            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ —Å–Ω—è—Ç–∏—è –≥–∞–ª–æ—á–µ–∫
                    except:
                        self.logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ', –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
                        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ —Å–Ω—è—Ç–∏—è –≥–∞–ª–æ—á–µ–∫
                else:
                    self.logger.info("üóëÔ∏è –°–Ω–∏–º–∞–µ–º –≤—Å–µ –≥–∞–ª–æ—á–∫–∏ —á–µ—Ä–µ–∑ '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ'...")
                    select_all_checkbox.click()

                # –ñ–¥–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
                time.sleep(1)

                                # 3. –¢–µ–ø–µ—Ä—å –≤—ã–±–∏—Ä–∞–µ–º –Ω—É–∂–Ω—ã–π —á–µ–∫–±–æ–∫—Å (–ø—Ä–æ–±—É–µ–º label, –∑–∞—Ç–µ–º fallback)
                self.logger.info("üîç –ò—â–µ–º —á–µ–∫–±–æ–∫—Å '–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G'...")

                # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ label —Ç–µ–∫—Å—Ç—É (—Ç–∏—Ö–æ, –±–µ–∑ –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö)
                checkbox = None
                try:
                    # –ò—â–µ–º label —Å –¢–û–ß–ù–´–ú —Ç–µ–∫—Å—Ç–æ–º (—Å—Ç—Ä–æ–≥–æ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é) –í IFRAME
                    label_xpath = """//label[
                        normalize-space(text()) = '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç >> –ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G' or
                        normalize-space(.) = '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç >> –ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G' or
                        normalize-space(text()) = '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç&nbsp;&gt;&gt;&nbsp;–ù–∏–∑–∫–∞—è&nbsp;—Å–∫–æ—Ä–æ—Å—Ç—å&nbsp;–≤&nbsp;3G/4G' or
                        normalize-space(.) = '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç&nbsp;&gt;&gt;&nbsp;–ù–∏–∑–∫–∞—è&nbsp;—Å–∫–æ—Ä–æ—Å—Ç—å&nbsp;–≤&nbsp;3G/4G'
                    ]"""

                    # –ò—â–µ–º —á–µ—Ä–µ–∑ iframe_handler, –∞ –Ω–µ —á–µ—Ä–µ–∑ driver –Ω–∞–ø—Ä—è–º—É—é
                    label = self.iframe_handler.find_element_in_iframe(("xpath", label_xpath))
                    if not label:
                        raise Exception("Label –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ iframe")

                    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω—ã–π label
                    label_text = label.text.strip()
                    if "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç" in label_text and "–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å" in label_text and "3G/4G" in label_text:
                        self.logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π label: '{label_text}'")

                        # –ü–æ–ª—É—á–∞–µ–º for –∞—Ç—Ä–∏–±—É—Ç –∏ –∏—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π input
                        for_attr = label.get_attribute("for")
                        if for_attr:
                            checkbox = self.iframe_handler.find_element_in_iframe(("id", for_attr))
                            if checkbox:
                                self.logger.info(f"‚úÖ –ß–µ–∫–±–æ–∫—Å –Ω–∞–π–¥–µ–Ω –ø–æ label —Å for='{for_attr}'")
                            else:
                                raise Exception("–ß–µ–∫–±–æ–∫—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ for –∞—Ç—Ä–∏–±—É—Ç—É")
                        else:
                            # –ï—Å–ª–∏ –Ω–µ—Ç for, –∏—â–µ–º input —Ä—è–¥–æ–º —Å label
                            checkbox = label.find_element("xpath", "./following-sibling::input[@type='checkbox']")
                            self.logger.info("‚úÖ –ß–µ–∫–±–æ–∫—Å –Ω–∞–π–¥–µ–Ω —Ä—è–¥–æ–º —Å label")
                    else:
                        self.logger.warning(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω label –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç: '{label_text}'")
                        raise Exception("Label –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω—É–∂–Ω—ã–π —Ç–µ–∫—Å—Ç")

                except Exception:
                    # –¢–∏—Ö–∏–π fallback –±–µ–∑ –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö
                    pass

                    # Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥
                    checkbox_selector = self.form_elements.get_dropdown_selector('reason_checkbox')
                    if checkbox_selector:
                        self.logger.info(f"üîÑ Fallback: –∏—â–µ–º –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É '{checkbox_selector}'")
                        checkbox = self.iframe_handler.find_element_in_iframe(checkbox_selector)
                        if checkbox:
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞—à–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —á–µ–∫–±–æ–∫—Å
                            try:
                                # –ò—â–µ–º label –¥–ª—è —ç—Ç–æ–≥–æ —á–µ–∫–±–æ–∫—Å–∞
                                checkbox_id = checkbox.get_attribute("id")
                                if checkbox_id:
                                    label = self.iframe_handler.find_element_in_iframe(
                                        ("xpath", f"//label[@for='{checkbox_id}']")
                                    )
                                    if label:
                                        label_text = label.text.strip()
                                        self.logger.info(f"‚úÖ Fallback: –Ω–∞–π–¥–µ–Ω —á–µ–∫–±–æ–∫—Å —Å label '{label_text}'")
                                        if "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç" in label_text and "–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å" in label_text:
                                            self.logger.info("‚úÖ –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —á–µ–∫–±–æ–∫—Å!")
                                        else:
                                            self.logger.warning(f"‚ö†Ô∏è Fallback –Ω–∞—à–µ–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —á–µ–∫–±–æ–∫—Å: '{label_text}'")
                                            checkbox = None
                                    else:
                                        self.logger.info(f"‚úÖ Fallback: –Ω–∞–π–¥–µ–Ω —á–µ–∫–±–æ–∫—Å —Å ID '{checkbox_id}' (–±–µ–∑ label)")
                                else:
                                    self.logger.info("‚úÖ Fallback: –Ω–∞–π–¥–µ–Ω —á–µ–∫–±–æ–∫—Å –±–µ–∑ ID")
                            except Exception as e:
                                self.logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ fallback —á–µ–∫–±–æ–∫—Å–∞: {e}")
                                checkbox = None
                        else:
                            self.logger.warning("‚ö†Ô∏è Fallback —Å–µ–ª–µ–∫—Ç–æ—Ä –Ω–µ –Ω–∞—à–µ–ª —á–µ–∫–±–æ–∫—Å")
                    else:
                        self.logger.warning("‚ö†Ô∏è Fallback —Å–µ–ª–µ–∫—Ç–æ—Ä –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω")

                if not checkbox:
                    self.logger.error("‚ùå –ß–µ–∫–±–æ–∫—Å '–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G' –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –æ–¥–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º")
                    return False

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã–±—Ä–∞–Ω –ª–∏ —É–∂–µ —á–µ–∫–±–æ–∫—Å
                if not checkbox.is_selected():
                    self.logger.info("‚úÖ –í—ã–±–∏—Ä–∞–µ–º —á–µ–∫–±–æ–∫—Å '–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G'...")
                    checkbox.click()
                else:
                    self.logger.info("‚úÖ –ß–µ–∫–±–æ–∫—Å '–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G' —É–∂–µ –≤—ã–±—Ä–∞–Ω")

                # –ñ–¥–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞
                time.sleep(1)

                self.logger.info("‚úÖ –ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: –ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G")
                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.iframe_handler.switch_to_main_document()

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.iframe_handler.switch_to_main_document()
            except:
                pass
            return False

    def submit_report(self):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç"""
        try:
            self.logger.info("üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç")

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            if not self.iframe_handler.switch_to_iframe():
                return False

            try:
                # –ò—â–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
                submit_selector = self.form_elements.get_element_selector('submit_button')
                submit_button = self.iframe_handler.wait_for_element_clickable(submit_selector)

                if not submit_button:
                    self.logger.error("‚ùå –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–∞")
                    return False

                # –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É
                submit_button.click()

                self.logger.info("‚úÖ –û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.iframe_handler.switch_to_main_document()

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á–µ—Ç–∞: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.iframe_handler.switch_to_main_document()
            except:
                pass
            return False
