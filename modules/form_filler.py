"""
–ú–æ–¥—É–ª—å –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –æ—Ç—á–µ—Ç–∞
"""

from selenium.webdriver.support.ui import Select
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException
from loguru import logger
import time


class FormFiller:
    """–ö–ª–∞—Å—Å –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –æ—Ç—á–µ—Ç–∞"""

    # –£—Å—Ç–æ–π—á–∏–≤—ã–µ –ª–æ–∫–∞—Ç–æ—Ä—ã –¥–ª—è ReportViewer dropdown
    DROPDOWN_ROOT = (
        By.XPATH,
        "//div[starts-with(@id,'ReportViewerControl_') and contains(@id,'_divDropDown')]"
    )
    
    # NBSP -> –ø—Ä–æ–±–µ–ª –∏ –ø–æ–∏—Å–∫ –ø–æ —á–∞—Å—Ç—è–º —Ç–µ–∫—Å—Ç–∞
    LABEL_XPATH = (
        ".//label["
        "contains(normalize-space(translate(., '\u00A0',' ')), '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç') and "
        "contains(normalize-space(translate(., '\u00A0',' ')), '–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å') and "
        "contains(normalize-space(translate(., '\u00A0',' ')), '3G/4G')"
        "]"
    )

    def __init__(self, driver, logger, iframe_handler, form_elements):
        self.driver = driver
        self.logger = logger
        self.iframe_handler = iframe_handler
        self.form_elements = form_elements

    def set_report_period(self, period_name='–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π'):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞"""
        try:
            self.logger.info(f"üìä –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞: {period_name}")

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            if not self.iframe_handler.switch_to_iframe():
                return False

            try:
                # –ò—â–µ–º –ø–æ–ª–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
                period_selector = self.form_elements.get_element_selector('period_dropdown')
                period_field = self.iframe_handler.find_element_with_diagnostics(period_selector)

                if not period_field:
                    self.logger.error("‚ùå –ü–æ–ª–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    return False

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ SELECT —ç–ª–µ–º–µ–Ω—Ç
                if period_field.tag_name.lower() != 'select':
                    self.logger.error(f"‚ùå –ü–æ–ª–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è SELECT —ç–ª–µ–º–µ–Ω—Ç–æ–º. –ù–∞–π–¥–µ–Ω: {period_field.tag_name}")
                    self.logger.info(f"   ID —ç–ª–µ–º–µ–Ω—Ç–∞: {period_field.get_attribute('id')}")
                    self.logger.info(f"   –ö–ª–∞—Å—Å—ã —ç–ª–µ–º–µ–Ω—Ç–∞: {period_field.get_attribute('class')}")
                    return False

                # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞
                period_value = self.form_elements.get_period_value(period_name)
                if not period_value:
                    self.logger.error(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥: {period_name}")
                    return False

                # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Select –∏ –≤—ã–±–∏—Ä–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
                period_select = Select(period_field)
                period_select.select_by_value(period_value)

                self.logger.info(f"‚úÖ –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {period_name} (–∑–Ω–∞—á–µ–Ω–∏–µ: {period_value})")

                # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è postback (ASP.NET WebForms)
                self.logger.info("‚è≥ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è postback –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞...")
                time.sleep(3)

                # –ü–æ—Å–ª–µ postback –∏—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞–Ω–æ–≤–æ (–∏–∑–±–µ–≥–∞–µ–º stale element reference)
                self.logger.info("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ postback...")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—è –¥–∞—Ç —Å—Ç–∞–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
                start_date_selector = self.form_elements.get_element_selector('start_date_field')
                start_date_field = self.iframe_handler.find_element_in_iframe(start_date_selector)

                if start_date_field and not start_date_field.get_attribute('disabled') and 'aspNetDisabled' not in start_date_field.get_attribute('class'):
                    self.logger.info("‚úÖ –ü–æ–ª—è –¥–∞—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞")
                else:
                    self.logger.warning("‚ö†Ô∏è –ü–æ–ª—è –¥–∞—Ç –≤—Å–µ –µ—â–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã, –≤–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞")
                    time.sleep(2)

                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.iframe_handler.switch_to_main_document()

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.iframe_handler.switch_to_main_document()
            except:
                pass
            return False

    def set_start_date(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞"""
        try:
            self.logger.info("üìÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞")

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            if not self.iframe_handler.switch_to_iframe():
                return False

            try:
                # –ò—â–µ–º –ø–æ–ª–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞
                start_date_selector = self.form_elements.get_element_selector('start_date_field')
                start_date_field = self.iframe_handler.find_element_in_iframe(start_date_selector)

                if not start_date_field:
                    self.logger.error("‚ùå –ü–æ–ª–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    return False

                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –¥–∞—Ç—É
                start_date = self.form_elements.get_test_date('start_date')

                # –ò—Å–ø–æ–ª—å–∑—É–µ–º JavaScript –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è (–ø–æ–ª–µ –∏–º–µ–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏)
                self.logger.info(f"üìù –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É —á–µ—Ä–µ–∑ JavaScript: {start_date}")
                self.driver.execute_script("arguments[0].value = arguments[1];", start_date_field, start_date)

                # –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏–µ onchange –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ JavaScript –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
                self.logger.info("üîÑ –¢—Ä–∏–≥–≥–µ—Ä–∏–º onchange —Å–æ–±—ã—Ç–∏–µ...")
                self.driver.execute_script("arguments[0].onchange();", start_date_field)

                # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è postback (ASP.NET WebForms)
                self.logger.info("‚è≥ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è postback...")
                time.sleep(3)

                # –ü–æ—Å–ª–µ postback –∏—â–µ–º —ç–ª–µ–º–µ–Ω—Ç –∑–∞–Ω–æ–≤–æ (–∏–∑–±–µ–≥–∞–µ–º stale element reference)
                self.logger.info("üîç –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∑–∞–Ω–æ–≤–æ –ø–æ—Å–ª–µ postback...")
                start_date_field = self.iframe_handler.find_element_in_iframe(start_date_selector)
                if not start_date_field:
                    self.logger.error("‚ùå –≠–ª–µ–º–µ–Ω—Ç –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ postback")
                    return False

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å
                actual_value = start_date_field.get_attribute('value')
                if start_date in actual_value:
                    self.logger.info(f"‚úÖ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {start_date}")
                else:
                    self.logger.warning(f"‚ö†Ô∏è –î–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è: {actual_value}")

                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.iframe_handler.switch_to_main_document()

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.iframe_handler.switch_to_main_document()
            except:
                pass
            return False

    def set_end_date(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è"""
        try:
            self.logger.info("üìÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è")

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            if not self.iframe_handler.switch_to_iframe():
                return False

            try:
                # –ò—â–µ–º –ø–æ–ª–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è
                end_date_selector = self.form_elements.get_element_selector('end_date_field')
                end_date_field = self.iframe_handler.find_element_in_iframe(end_date_selector)

                if not end_date_field:
                    self.logger.error("‚ùå –ü–æ–ª–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    return False

                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –¥–∞—Ç—É
                end_date = self.form_elements.get_test_date('end_date')

                # –ò—Å–ø–æ–ª—å–∑—É–µ–º JavaScript –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è (–ø–æ–ª–µ –∏–º–µ–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏)
                self.logger.info(f"üìù –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É —á–µ—Ä–µ–∑ JavaScript: {end_date}")
                self.driver.execute_script("arguments[0].value = arguments[1];", end_date_field, end_date)

                # –£ –ø–æ–ª—è –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ—Ç onchange –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞, –ø—Ä–æ—Å—Ç–æ –∂–¥–µ–º
                self.logger.info("‚è≥ –ñ–¥–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
                time.sleep(2)

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å
                actual_value = end_date_field.get_attribute('value')
                if end_date in actual_value:
                    self.logger.info(f"‚úÖ –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {end_date}")
                else:
                    self.logger.warning(f"‚ö†Ô∏è –î–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è: {actual_value}")

                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.iframe_handler.switch_to_main_document()

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.iframe_handler.switch_to_main_document()
            except:
                pass
            return False

    def set_reason(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏"""
        try:
            self.logger.info("üîç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è")

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            if not self.iframe_handler.switch_to_iframe():
                return False

            try:
                # 1. –°–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
                dropdown_toggle_selector = self.form_elements.get_dropdown_selector('reason_dropdown_toggle')
                if not dropdown_toggle_selector:
                    self.logger.error("‚ùå –°–µ–ª–µ–∫—Ç–æ—Ä –∫–Ω–æ–ø–∫–∏ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return False

                dropdown_toggle = self.iframe_handler.find_element_in_iframe(dropdown_toggle_selector)
                if not dropdown_toggle:
                    self.logger.error("‚ùå –ö–Ω–æ–ø–∫–∞ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    return False

                self.logger.info("üìã –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è...")
                dropdown_toggle.click()

                # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
                time.sleep(2)

                # 2. –¢–µ–ø–µ—Ä—å –Ω–∞–∂–∏–º–∞–µ–º "–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ" —á—Ç–æ–±—ã —Å–Ω—è—Ç—å –≤—Å–µ –≥–∞–ª–æ—á–∫–∏
                select_all_selector = self.form_elements.get_dropdown_selector('reason_select_all')
                if not select_all_selector:
                    self.logger.error("‚ùå –°–µ–ª–µ–∫—Ç–æ—Ä '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return False

                # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —á–µ–∫–±–æ–∫—Å "–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ"
                select_all_checkbox = self.iframe_handler.find_element_in_iframe(select_all_selector)
                if not select_all_checkbox:
                    self.logger.warning("‚ö†Ô∏è –ß–µ–∫–±–æ–∫—Å '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ' –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —Ç–µ–∫—Å—Ç—É...")

                    # Fallback: –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É "–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ"
                    try:
                        select_all_checkbox = self.iframe_handler.find_element_in_iframe(
                            ("xpath", "//input[@type='checkbox' and following-sibling::label[contains(text(), '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ')]]")
                        )
                        if select_all_checkbox:
                            self.logger.info("‚úÖ –ß–µ–∫–±–æ–∫—Å '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ' –Ω–∞–π–¥–µ–Ω –ø–æ —Ç–µ–∫—Å—Ç—É")
                        else:
                            self.logger.warning("‚ö†Ô∏è –ß–µ–∫–±–æ–∫—Å '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ' –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–∞–∂–µ –ø–æ —Ç–µ–∫—Å—Ç—É, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
                            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ —Å–Ω—è—Ç–∏—è –≥–∞–ª–æ—á–µ–∫
                    except:
                        self.logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ', –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
                        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ —Å–Ω—è—Ç–∏—è –≥–∞–ª–æ—á–µ–∫
                else:
                    self.logger.info("üóëÔ∏è –°–Ω–∏–º–∞–µ–º –≤—Å–µ –≥–∞–ª–æ—á–∫–∏ —á–µ—Ä–µ–∑ '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ'...")
                    select_all_checkbox.click()

                                # –ñ–¥–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
                self.logger.info("‚è≥ –ñ–¥–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞...")

                # –ñ–¥–µ–º –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ–∂–∏–¥–∞–Ω–∏—è
                wait_time = 10
                start_time = time.time()
                while time.time() - start_time < wait_time:
                    try:
                        # –ò—â–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–∂–∏–¥–∞–Ω–∏—è
                        modal = self.driver.find_element("xpath",
                            "//div[contains(@class, 'wait-indicator-dialog') and contains(@class, 'in')]")
                        if modal.is_displayed():
                            self.logger.info("‚è≥ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–∂–∏–¥–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ, –∂–¥–µ–º...")
                            time.sleep(0.5)
                            continue
                        else:
                            self.logger.info("‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—á–µ–∑–ª–æ")
                            break
                    except:
                        # –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ - –∑–Ω–∞—á–∏—Ç –∏—Å—á–µ–∑–ª–æ
                        self.logger.info("‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                        break

                                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
                time.sleep(2)
                self.logger.info("‚úÖ –ì–æ—Ç–æ–≤—ã –∫ –≤—ã–±–æ—Ä—É —á–µ–∫–±–æ–∫—Å–∞")

                # 3. ‚ö†Ô∏è –í–ê–ñ–ù–´–ô –ü–ï–†–ï–•–û–î –∏–∑ iframe –≤ –∫–æ—Ä–µ–Ω—å, –¥–∞–ª—å—à–µ –∏—â–µ–º –Ω–µ –≤ iframe
                self.logger.info("üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ label –≤ dropdown...")
                
                # –ï—Å–ª–∏ –ø–æ—Å–ª–µ "–í—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ" dropdown –∑–∞–∫—Ä—ã–ª—Å—è ‚Äî –ø–µ—Ä–µ–æ—Ç–∫—Ä–æ–µ–º
                select_ok = self.select_reason_label("#ReportViewerControl_ctl04_ctl23_divDropDown_ctl00")
                if not select_ok:
                    self.logger.error("‚ùå Label '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç >> –ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤–Ω—É—Ç—Ä–∏ dropdown")
                    return False
                
                self.logger.info("‚úÖ –ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: –ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G")
                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.iframe_handler.switch_to_main_document()

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.iframe_handler.switch_to_main_document()
            except:
                pass
            return False

    def _find_label_in_all_iframes(self, label_xpath):
        """–ù–∞–π—Ç–∏ label –≤–æ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö iframe'–∞—Ö"""
        try:
            self.logger.info("üîç –ü–æ–∏—Å–∫ label –≤–æ –≤—Å–µ—Ö iframe'–∞—Ö...")

                        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö iframe'–æ–≤
            self.iframe_handler.switch_to_main_document()

            # –°–ù–ê–ß–ê–õ–ê –∏—â–µ–º –≤ main document (–ø–∞–Ω–µ–ª—å –º–æ–≥–ª–∞ —É–µ—Ö–∞—Ç—å –Ω–∞–≤–µ—Ä—Ö)
            self.logger.info("üîç –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤ main document...")
            try:
                label = self.driver.find_element("xpath", label_xpath)
                if label and label.is_displayed():
                    label_text = label.text.strip()
                    self.logger.info(f"‚úÖ Label –Ω–∞–π–¥–µ–Ω –≤ main document: '{label_text}'")

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –Ω—É–∂–Ω—ã–π label
                    if ("–ò–Ω—Ç–µ—Ä–Ω–µ—Ç" in label_text or "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç" in label.get_attribute("innerHTML", "")) and \
                       ("–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å" in label_text or "–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å" in label.get_attribute("innerHTML", "")) and \
                       ("3G/4G" in label_text or "3G/4G" in label.get_attribute("innerHTML", "")):
                        self.logger.info(f"üéØ –ù–∞–π–¥–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π label –≤ main document!")
                        return label
                    else:
                        self.logger.info(f"‚ö†Ô∏è Label –≤ main document –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç: '{label_text}'")
            except:
                self.logger.info("üîç Label –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ main document")

            # –¢–µ–ø–µ—Ä—å –∏—â–µ–º –≤—Å–µ iframe'—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            iframes = self.driver.find_elements("tag name", "iframe")
            self.logger.info(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(iframes)} iframe'–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")

            for i, iframe in enumerate(iframes):
                try:
                    self.logger.info(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º iframe {i+1}/{len(iframes)}...")

                    # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
                    self.driver.switch_to.frame(iframe)

                    # –ò—â–µ–º label –≤ —Ç–µ–∫—É—â–µ–º iframe
                    try:
                        label = self.driver.find_element("xpath", label_xpath)
                        if label and label.is_displayed():
                            label_text = label.text.strip()
                            self.logger.info(f"‚úÖ Label –Ω–∞–π–¥–µ–Ω –≤ iframe {i+1}: '{label_text}'")

                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –Ω—É–∂–Ω—ã–π label (–±–æ–ª–µ–µ –≥–∏–±–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
                            if ("–ò–Ω—Ç–µ—Ä–Ω–µ—Ç" in label_text or "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç" in label.get_attribute("innerHTML", "")) and \
                               ("–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å" in label_text or "–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å" in label.get_attribute("innerHTML", "")) and \
                               ("3G/4G" in label_text or "3G/4G" in label.get_attribute("innerHTML", "")):
                                self.logger.info(f"üéØ –ù–∞–π–¥–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π label –≤ iframe {i+1}!")
                                return label
                            else:
                                self.logger.info(f"‚ö†Ô∏è Label –≤ iframe {i+1} –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç: '{label_text}'")
                                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
                                try:
                                    inner_html = label.get_attribute("innerHTML", "")
                                    self.logger.info(f"üîç innerHTML: '{inner_html}'")
                                except:
                                    pass
                    except:
                        # Label –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —ç—Ç–æ–º iframe
                        pass

                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ iframe
                    self.driver.switch_to.default_content()

                except Exception as e:
                    self.logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ iframe {i+1}: {e}")
                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                    try:
                        self.driver.switch_to.default_content()
                    except:
                        pass
                    continue

            self.logger.warning("‚ö†Ô∏è Label –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ –æ–¥–Ω–æ–º iframe")
            return None

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤–æ –≤—Å–µ—Ö iframe'–∞—Ö: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
            try:
                self.driver.switch_to.default_content()
            except:
                pass
            return None

    def _find_label_on_page(self, label_xpath):
        """–ù–∞–π—Ç–∏ label –Ω–∞ –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ (–Ω–µ —Ç–æ–ª—å–∫–æ –≤ iframe'–∞—Ö)"""
        try:
            self.logger.info("üîç –ü–æ–∏—Å–∫ label –Ω–∞ –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ...")

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
            self.iframe_handler.switch_to_main_document()

            # –ò—â–µ–º label –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            try:
                labels = self.driver.find_elements("xpath", label_xpath)
                self.logger.info(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(labels)} label'–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ")

                for i, label in enumerate(labels):
                    try:
                        if label.is_displayed():
                            label_text = label.text.strip()
                            self.logger.info(f"‚úÖ Label {i+1} –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ: '{label_text}'")

                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –Ω—É–∂–Ω—ã–π label
                            if ("–ò–Ω—Ç–µ—Ä–Ω–µ—Ç" in label_text or "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç" in label.get_attribute("innerHTML", "")) and \
                               ("–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å" in label_text or "–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å" in label.get_attribute("innerHTML", "")) and \
                               ("3G/4G" in label_text or "3G/4G" in label.get_attribute("innerHTML", "")):
                                self.logger.info(f"üéØ –ù–∞–π–¥–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π label –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ!")
                                return label
                            else:
                                self.logger.info(f"‚ö†Ô∏è Label {i+1} –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç: '{label_text}'")
                                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
                                try:
                                    inner_html = label.get_attribute("innerHTML", "")
                                    self.logger.info(f"üîç innerHTML: '{inner_html}'")
                                except:
                                    pass
                    except Exception as e:
                        self.logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ label {i+1}: {e}")
                        continue

            except Exception as e:
                self.logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ label'–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {e}")

            # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º –∏—Å–∫–∞—Ç—å –ø–æ –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–º—É —Å–µ–ª–µ–∫—Ç–æ—Ä—É
            self.logger.info("üîç –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É...")
            try:
                all_labels = self.driver.find_elements("tag name", "label")
                self.logger.info(f"üìã –í—Å–µ–≥–æ label'–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(all_labels)}")

                for i, label in enumerate(all_labels):
                    try:
                        if label.is_displayed():
                            label_text = label.text.strip()
                            if label_text and len(label_text) > 10:  # –¢–æ–ª—å–∫–æ –Ω–µ–ø—É—Å—Ç—ã–µ –∏ –¥–ª–∏–Ω–Ω—ã–µ
                                self.logger.info(f"üìù Label {i+1}: '{label_text}'")

                                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω—É–∂–Ω—ã–π —Ç–µ–∫—Å—Ç
                                if "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç" in label_text and "–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å" in label_text and "3G/4G" in label_text:
                                    self.logger.info(f"üéØ –ù–∞–π–¥–µ–Ω –Ω—É–∂–Ω—ã–π label –ø–æ –ø—Ä–æ—Å—Ç–æ–º—É –ø–æ–∏—Å–∫—É!")
                                    return label
                    except:
                        continue

            except Exception as e:
                self.logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å—Ç–æ–º –ø–æ–∏—Å–∫–µ: {e}")

            self.logger.warning("‚ö†Ô∏è Label –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –Ω–∏ –ø–æ –ø—Ä–æ—Å—Ç–æ–º—É –ø–æ–∏—Å–∫—É")
            return None

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {e}")
            return None

    def _open_dropdown_again_if_closed(self, toggle_in_iframe_locator, timeout=10):
        """–ï—Å–ª–∏ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ dropdown –Ω–µ—Ç/–Ω–µ–≤–∏–¥–∏–º ‚Äî —Å–Ω–æ–≤–∞ –∫–ª–∏–∫–∞–µ–º toggle –≤–Ω—É—Ç—Ä–∏ iframe"""
        try:
            root = self.driver.find_element(*self.DROPDOWN_ROOT)
            if not root.is_displayed():
                self.logger.info("üîÑ Dropdown –Ω–µ–≤–∏–¥–∏–º, –ø–µ—Ä–µ–æ—Ç–∫—Ä—ã–≤–∞–µ–º...")
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ iframe –¥–ª—è –∫–ª–∏–∫–∞
                self.iframe_handler.switch_to_iframe()
                toggle = self.iframe_handler.find_element_in_iframe(toggle_in_iframe_locator)
                toggle.click()
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–µ–Ω—å
                self.driver.switch_to.default_content()
        except:
            self.logger.info("üîÑ Dropdown –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–∫—Ä—ã–≤–∞–µ–º...")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ iframe –¥–ª—è –∫–ª–∏–∫–∞
            self.iframe_handler.switch_to_iframe()
            toggle = self.iframe_handler.find_element_in_iframe(toggle_in_iframe_locator)
            toggle.click()
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–µ–Ω—å
            self.driver.switch_to.default_content()
        
        # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è dropdown
        wait = WebDriverWait(self.driver, timeout)
        root = wait.until(EC.visibility_of_element_located(self.DROPDOWN_ROOT))
        self.logger.info("‚úÖ Dropdown –æ—Ç–∫—Ä—ã—Ç –∏ –≤–∏–¥–∏–º")

    def _find_label_in_dropdown(self, timeout=10):
        """–ù–∞–π—Ç–∏ label –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ dropdown"""
        try:
            wait = WebDriverWait(self.driver, timeout)
            root = wait.until(EC.visibility_of_element_located(self.DROPDOWN_ROOT))
            
            # –£ dropdown –≤–Ω—É—Ç—Ä–∏ –µ—Å—Ç—å –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º–∞—è –æ–±–ª–∞—Å—Ç—å <div style="overflow:auto">
            try:
                scrollbox = root.find_element(By.XPATH, ".//div[descendant::table and contains(@style,'overflow')]")
                self.logger.info("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º–∞—è –æ–±–ª–∞—Å—Ç—å dropdown")
            except:
                scrollbox = root
                self.logger.info("‚ö†Ô∏è –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º–∞—è –æ–±–ª–∞—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–µ—Å—å dropdown")
            
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å—Ä–∞–∑—É:
            try:
                label = scrollbox.find_element(By.XPATH, self.LABEL_XPATH)
                self.logger.info("‚úÖ Label –Ω–∞–π–¥–µ–Ω —Å—Ä–∞–∑—É")
                return label
            except:
                self.logger.info("üîç Label –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–∞–∑—É, –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ—à–∞–≥–æ–≤—ã–π —Å–∫—Ä–æ–ª–ª...")
                
                # –ï—Å–ª–∏ –Ω–µ –≤–∏–¥–Ω–æ, —Å–∫—Ä–æ–ª–ª–∏–º –∏ –∏—â–µ–º –ø–æ —à–∞–≥–∞–º
                total = self.driver.execute_script("return arguments[0].scrollHeight", scrollbox)
                view = self.driver.execute_script("return arguments[0].clientHeight", scrollbox)
                step = max(view // 2, 80)
                
                self.logger.info(f"üìú –í—ã—Å–æ—Ç–∞: {total}, –≤–∏–¥–∏–º–∞—è: {view}, —à–∞–≥: {step}")
                
                for y in range(0, total + step, step):
                    self.driver.execute_script("arguments[0].scrollTop = arguments[1];", scrollbox, y)
                    try:
                        el = scrollbox.find_element(By.XPATH, self.LABEL_XPATH)
                        self.driver.execute_script("arguments[0].scrollIntoView({block:'center'});", el)
                        self.logger.info(f"‚úÖ Label –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ {y}")
                        return el
                    except:
                        continue
                
                self.logger.warning("‚ö†Ô∏è Label –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–∞–∂–µ –ø–æ—Å–ª–µ –ø–æ—à–∞–≥–æ–≤–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞")
                return None
                
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ label –≤ dropdown: {e}")
            return None

    def select_reason_label(self, toggle_in_iframe_locator):
        """–í—ã–±—Ä–∞—Ç—å label –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è"""
        try:
            # 1) –ü–æ—Å–ª–µ ¬´–≤—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ¬ª –¥–æ–∂–¥–∞—Ç—å—Å—è —Ç–∏—à–∏–Ω—ã (–ª–æ–≥–∏–∫–∞ invisibility ‚Äî –æ–∫)
            # 2) –ö—Ä–∏—Ç–∏—á–Ω–æ: –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–æ—Ä–µ–Ω—å –∏ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ dropdown –æ—Ç–∫—Ä—ã—Ç
            self.driver.switch_to.default_content()
            self._open_dropdown_again_if_closed(toggle_in_iframe_locator)

            # 3) –ù–∞–π—Ç–∏ label –≤–Ω—É—Ç—Ä–∏ –ö–û–ù–¢–ï–ô–ù–ï–†–ê dropdown
            label = self._find_label_in_dropdown()
            if not label:
                return False

            # 4) –ö–ª–∏–∫ –ø–æ label (–Ω–∞–¥—ë–∂–Ω–µ–µ, —á–µ–º –ø–æ input)
            try:
                wait = WebDriverWait(self.driver, 5)
                wait.until(EC.element_to_be_clickable(label)).click()
                self.logger.info("‚úÖ Label —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω")
            except:
                self.driver.execute_script("arguments[0].click();", label)
                self.logger.info("‚úÖ Label –≤—ã–±—Ä–∞–Ω —á–µ—Ä–µ–∑ JavaScript")

            return True
            
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ label: {e}")
            return False

    def submit_report(self):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç"""
        try:
            self.logger.info("üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç")

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            if not self.iframe_handler.switch_to_iframe():
                return False

            try:
                # –ò—â–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
                submit_selector = self.form_elements.get_element_selector('submit_button')
                submit_button = self.iframe_handler.wait_for_element_clickable(submit_selector)

                if not submit_button:
                    self.logger.error("‚ùå –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–∞")
                    return False

                # –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É
                submit_button.click()

                self.logger.info("‚úÖ –û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.iframe_handler.switch_to_main_document()

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á–µ—Ç–∞: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.iframe_handler.switch_to_main_document()
            except:
                pass
            return False
