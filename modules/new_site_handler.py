#!/usr/bin/env python3
"""
new_site_handler.py ‚Äî –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–≤—ã–º —Å–∞–π—Ç–æ–º –æ—Ç—á–µ—Ç–æ–≤.
–°–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ –æ—Ç—á–µ—Ç–æ–≤.
"""

import time
import logging
from datetime import datetime, timedelta
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import TimeoutException, NoSuchElementException


class NewSiteReportHandler:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—á–µ—Ç–æ–≤ —Å –Ω–æ–≤–æ–≥–æ —Å–∞–π—Ç–∞."""

    def __init__(self, driver, logger=None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞.

        Args:
            driver: WebDriver —ç–∫–∑–µ–º–ø–ª—è—Ä
            logger: –õ–æ–≥–≥–µ—Ä (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π)
        """
        self.driver = driver
        self.logger = logger or logging.getLogger(__name__)

        # ID —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        self.ELEMENT_IDS = {
            'period_dropdown': 'ReportViewerControl_ctl04_ctl03_ddValue',
            'start_date_field': 'ReportViewerControl_ctl04_ctl05_txtValue',
            'end_date_field': 'ReportViewerControl_ctl04_ctl07_txtValue',
            'reason_dropdown': 'ReportViewerControl_ctl04_ctl09_txtValue',  # –ü–æ–ª–µ –¥–ª—è –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è
            'submit_button': 'ReportViewerControl_ctl04_ctl00',
            'excel_link': "//a[contains(text(), 'Excel') and contains(@class, 'ActiveLink')]"
        }

        # –ó–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞
        self.PERIOD_VALUES = {
            '–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π': '–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π',
            '–¥–µ–Ω—å': '–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π',
            '–Ω–µ–¥–µ–ª—è': '–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π',
            '–º–µ—Å—è—Ü': '–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π',
            '7_–¥–Ω–µ–π': '–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π',
            '—Å–µ–≥–æ–¥–Ω—è': '–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π'
        }

        # –ó–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è
        self.REASON_VALUES = {
            '–Ω–∏–∑–∫–∞—è_—Å–∫–æ—Ä–æ—Å—Ç—å_3g_4g': '–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G',
            '–Ω–∏–∑–∫–∞—è_—Å–∫–æ—Ä–æ—Å—Ç—å': '–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G',
            '3g_4g': '–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G',
            'default': '–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3G/4G'
        }

        # –§–ª–∞–≥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å iframe
        self.iframe_mode = True

    def fill_report_parameters(self, start_date, end_date, period='–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π', reason='–Ω–∏–∑–∫–∞—è_—Å–∫–æ—Ä–æ—Å—Ç—å_3g_4g'):
        """
        –ó–∞–ø–æ–ª–Ω—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç—á–µ—Ç–∞.

        Args:
            start_date: –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –æ—Ç—á–µ—Ç–∞
            end_date: –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞
            period: –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é '–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π')
            reason: –ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é '–Ω–∏–∑–∫–∞—è_—Å–∫–æ—Ä–æ—Å—Ç—å_3g_4g')

        Returns:
            bool: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            self.logger.info("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ—Ç—á–µ—Ç–∞...")

            # –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–æ–Ω–∞ –¥–æ–ª–≥–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è)
            self.logger.info("‚è≥ –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
            import time
            time.sleep(10)

            # 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º "–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞"
            if not self._set_report_period(period):
                return False

            # –ñ–¥–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–ª–µ–π –¥–∞—Ç
            self.logger.info("‚è≥ –ñ–¥–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–ª–µ–π –¥–∞—Ç...")
            time.sleep(3)

            # 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞"
            if not self._set_start_date(start_date):
                return False

            # 3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è"
            if not self._set_end_date(end_date):
                return False

            # 4. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º "–ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è"
            if not self._set_reason(reason):
                return False

            self.logger.info("‚úÖ –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç—á–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            return True

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {e}")
            return False

    def _set_report_period(self, period):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞."""
        try:
            period_value = self.PERIOD_VALUES.get(period.lower())
            if not period_value:
                self.logger.error(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥: {period}")
                return False

            # –†–∞–±–æ—Ç–∞–µ–º —Å iframe –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º
            if self.iframe_mode:
                return self._set_report_period_in_iframe(period_value)
            else:
                return self._set_report_period_in_main_document(period_value)

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞: {e}")
            return False

    def _set_report_period_in_iframe(self, period_value):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞ –≤ iframe'–µ."""
        try:
            # –ò—â–µ–º iframe
            iframe = self.driver.find_element(By.TAG_NAME, "iframe")
            if not iframe:
                self.logger.error("‚ùå Iframe –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            self.driver.switch_to.frame(iframe)
            self.logger.info("‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ iframe")

            try:
                # –ò—â–µ–º –ø–æ–ª–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞
                period_dropdown = WebDriverWait(self.driver, 10).until(
                    EC.element_to_be_clickable((By.ID, self.ELEMENT_IDS['period_dropdown']))
                )

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ª–∏ –ø–æ–ª–µ
                if 'aspNetDisabled' in period_dropdown.get_attribute('class') or 'disabled' in period_dropdown.get_attribute('class'):
                    self.logger.info("üîì –ü–æ–ª–µ '–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞' –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ, –ø—ã—Ç–∞–µ–º—Å—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å...")

                    # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–µ
                    self.driver.execute_script("arguments[0].removeAttribute('disabled');", period_dropdown)
                    self.driver.execute_script("arguments[0].classList.remove('aspNetDisabled');", period_dropdown)
                    self.driver.execute_script("arguments[0].classList.remove('DisabledTextBox');", period_dropdown)

                    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
                    time.sleep(1)

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–æ—Å—å –ª–∏ –ø–æ–ª–µ
                    if 'aspNetDisabled' not in period_dropdown.get_attribute('class'):
                        self.logger.info("‚úÖ –ü–æ–ª–µ '–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞' —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ")
                    else:
                        self.logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–µ '–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞'")

                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
                period_select = Select(period_dropdown)

                # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –æ–ø—Ü–∏—é –ø–æ —Ç–µ–∫—Å—Ç—É
                try:
                    period_select.select_by_visible_text(period_value)
                    self.logger.info(f"‚úÖ –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {period_value}")
                except:
                    # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é
                    options = period_select.options
                    for option in options:
                        if period_value.lower() in option.text.lower():
                            period_select.select_by_visible_text(option.text)
                            self.logger.info(f"‚úÖ –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {option.text}")
                            break
                    else:
                        # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –æ–ø—Ü–∏—é
                        period_select.select_by_index(0)
                        self.logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ, –≤—ã–±—Ä–∞–Ω–∞ –ø–µ—Ä–≤–∞—è –æ–ø—Ü–∏—è: {period_select.first_selected_option.text}")

                # –ñ–¥–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ª–µ–π
                self.logger.info("‚è≥ –ñ–¥–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª–µ–π –¥–∞—Ç...")
                time.sleep(3)

                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.driver.switch_to.default_content()
                self.logger.info("‚úÖ –í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç")

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞ –≤ iframe: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.driver.switch_to.default_content()
            except:
                pass
            return False

    def _set_report_period_in_main_document(self, period_value):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ (—Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥)."""
        try:
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–æ ID
            try:
                period_dropdown = WebDriverWait(self.driver, 10).until(
                    EC.element_to_be_clickable((By.ID, self.ELEMENT_IDS['period_dropdown']))
                )
            except TimeoutException:
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ ID, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —Ç–µ–∫—Å—Ç—É
                self.logger.info("üîç –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ ID, –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É...")
                period_dropdown = self._find_element_by_multiple_criteria('period', 'select')

                if not period_dropdown:
                    self.logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª–µ '–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞'")
                    return False

            # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
            if not self._wait_for_element_ready(period_dropdown):
                self.logger.error("‚ùå –≠–ª–µ–º–µ–Ω—Ç '–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞' –Ω–µ –≥–æ—Ç–æ–≤ –∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é")
                return False

            period_select = Select(period_dropdown)
            period_select.select_by_value(period_value)

            self.logger.info(f"‚úÖ –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {period_value}")
            return True

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á–µ—Ç–∞: {e}")
            return False

    def _set_start_date(self, start_date):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞."""
        try:
            # –†–∞–±–æ—Ç–∞–µ–º —Å iframe –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º
            if self.iframe_mode:
                return self._set_start_date_in_iframe(start_date)
            else:
                return self._set_start_date_in_main_document(start_date)

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞: {e}")
            return False

    def _set_start_date_in_iframe(self, start_date):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –≤ iframe'–µ."""
        try:
            # –ò—â–µ–º iframe
            iframe = self.driver.find_element(By.TAG_NAME, "iframe")
            if not iframe:
                self.logger.error("‚ùå Iframe –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            self.driver.switch_to.frame(iframe)
            self.logger.info("‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ iframe –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞")

            try:
                # –ò—â–µ–º –ø–æ–ª–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞
                start_date_field = WebDriverWait(self.driver, 10).until(
                    EC.element_to_be_clickable((By.ID, self.ELEMENT_IDS['start_date_field']))
                )

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ª–∏ –ø–æ–ª–µ
                if 'aspNetDisabled' in start_date_field.get_attribute('class') or 'disabled' in start_date_field.get_attribute('class'):
                    self.logger.warning("‚ö†Ô∏è –ü–æ–ª–µ '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞' –≤—Å–µ –µ—â–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞.")
                    return False

                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É
                start_date_field.clear()
                start_date_field.send_keys(start_date.strftime("%d.%m.%Y"))

                self.logger.info(f"‚úÖ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {start_date.strftime('%d.%m.%Y')}")
                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.driver.switch_to.default_content()
                self.logger.info("‚úÖ –í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç")

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –≤ iframe: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.driver.switch_to.default_content()
            except:
                pass
            return False

    def _set_start_date_in_main_document(self, start_date):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ (—Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥)."""
        try:
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–æ ID
            try:
                start_date_field = WebDriverWait(self.driver, 10).until(
                    EC.element_to_be_clickable((By.ID, self.ELEMENT_IDS['start_date_field']))
                )
            except TimeoutException:
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ ID, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —Ç–µ–∫—Å—Ç—É
                self.logger.info("üîç –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ ID, –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É...")
                start_date_field = self._find_element_by_multiple_criteria('start_date', 'input')

                if not start_date_field:
                    self.logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª–µ '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞'")
                    return False

            # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
            if not self._wait_for_element_ready(start_date_field):
                self.logger.error("‚ùå –≠–ª–µ–º–µ–Ω—Ç '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞' –Ω–µ –≥–æ—Ç–æ–≤ –∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é")
                return False

            start_date_field.clear()
            start_date_field.send_keys(start_date.strftime("%d.%m.%Y"))

            self.logger.info(f"‚úÖ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {start_date.strftime('%d.%m.%Y')}")
            return True

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞: {e}")
            return False

    def _set_end_date(self, end_date):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è."""
        try:
            # –†–∞–±–æ—Ç–∞–µ–º —Å iframe –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º
            if self.iframe_mode:
                return self._set_end_date_in_iframe(end_date)
            else:
                return self._set_end_date_in_main_document(end_date)

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è: {e}")
            return False

    def _set_end_date_in_iframe(self, end_date):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤ iframe'–µ."""
        try:
            # –ò—â–µ–º iframe
            iframe = self.driver.find_element(By.TAG_NAME, "iframe")
            if not iframe:
                self.logger.error("‚ùå Iframe –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            self.driver.switch_to.frame(iframe)
            self.logger.info("‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ iframe –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è")

            try:
                # –ò—â–µ–º –ø–æ–ª–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è
                end_date_field = WebDriverWait(self.driver, 10).until(
                    EC.element_to_be_clickable((By.ID, self.ELEMENT_IDS['end_date_field']))
                )

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ª–∏ –ø–æ–ª–µ
                if 'aspNetDisabled' in end_date_field.get_attribute('class') or 'disabled' in end_date_field.get_attribute('class'):
                    self.logger.warning("‚ö†Ô∏è –ü–æ–ª–µ '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è' –≤—Å–µ –µ—â–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞.")
                    return False

                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É
                end_date_field.clear()
                end_date_field.send_keys(end_date.strftime("%d.%m.%Y"))

                self.logger.info(f"‚úÖ –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {end_date.strftime('%d.%m.%Y')}")
                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.driver.switch_to.default_content()
                self.logger.info("‚úÖ –í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç")

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤ iframe: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.driver.switch_to.default_content()
            except:
                pass
            return False

    def _set_end_date_in_main_document(self, end_date):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ (—Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥)."""
        try:
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–æ ID
            try:
                end_date_field = WebDriverWait(self.driver, 10).until(
                    EC.element_to_be_clickable((By.ID, self.ELEMENT_IDS['end_date_field']))
                )
            except TimeoutException:
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ ID, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —Ç–µ–∫—Å—Ç—É
                self.logger.info("üîç –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ ID, –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É...")
                end_date_field = self._find_element_by_multiple_criteria('end_date', 'input')

                if not end_date_field:
                    self.logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª–µ '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è'")
                    return False

            # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
            if not self._wait_for_element_ready(end_date_field):
                self.logger.error("‚ùå –≠–ª–µ–º–µ–Ω—Ç '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è' –Ω–µ –≥–æ—Ç–æ–≤ –∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é")
                return False

            end_date_field.clear()
            end_date_field.send_keys(end_date.strftime("%d.%m.%Y"))

            self.logger.info(f"‚úÖ –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {end_date.strftime('%d.%m.%Y')}")
            return True

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è: {e}")
            return False

    def _set_reason(self, reason):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è."""
        try:
            # –†–∞–±–æ—Ç–∞–µ–º —Å iframe –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º
            if self.iframe_mode:
                return self._set_reason_in_iframe(reason)
            else:
                return self._set_reason_in_main_document(reason)

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è: {e}")
            return False

    def _set_reason_in_iframe(self, reason):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ iframe'–µ."""
        try:
            # –ò—â–µ–º iframe
            iframe = self.driver.find_element(By.TAG_NAME, "iframe")
            if not iframe:
                self.logger.error("‚ùå Iframe –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            self.driver.switch_to.frame(iframe)
            self.logger.info("‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ iframe –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è")

            try:
                # –ò—â–µ–º –ø–æ–ª–µ –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è
                reason_field = WebDriverWait(self.driver, 10).until(
                    EC.element_to_be_clickable((By.ID, self.ELEMENT_IDS['reason_dropdown']))
                )

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ª–∏ –ø–æ–ª–µ
                if 'aspNetDisabled' in reason_field.get_attribute('class') or 'disabled' in reason_field.get_attribute('class'):
                    self.logger.warning("‚ö†Ô∏è –ü–æ–ª–µ '–ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è' –≤—Å–µ –µ—â–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞.")
                    return False

                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è
                reason_field.clear()
                reason_field.send_keys(self.REASON_VALUES.get(reason.lower(), self.REASON_VALUES['default']))

                self.logger.info(f"‚úÖ –ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {self.REASON_VALUES.get(reason.lower(), self.REASON_VALUES['default'])}")
                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.driver.switch_to.default_content()
                self.logger.info("‚úÖ –í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç")

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ iframe: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.driver.switch_to.default_content()
            except:
                pass
            return False

    def _set_reason_in_main_document(self, reason):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ (—Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥)."""
        try:
            reason_value = self.REASON_VALUES.get(reason.lower(), self.REASON_VALUES['default'])

            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–æ ID
            try:
                reason_dropdown = WebDriverWait(self.driver, 10).until(
                    EC.element_to_be_clickable((By.ID, self.ELEMENT_IDS['reason_dropdown']))
                )
            except TimeoutException:
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ ID, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —Ç–µ–∫—Å—Ç—É
                self.logger.info("üîç –ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ ID, –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É...")
                reason_dropdown = self._find_element_by_multiple_criteria('reason', 'select')

                if not reason_dropdown:
                    self.logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª–µ '–ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è'")
                    return False

            # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
            if not self._wait_for_element_ready(reason_dropdown):
                self.logger.error("‚ùå –≠–ª–µ–º–µ–Ω—Ç '–ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è' –Ω–µ –≥–æ—Ç–æ–≤ –∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é")
                return False

            reason_select = Select(reason_dropdown)

            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –æ–ø—Ü–∏—é –ø–æ —Ç–µ–∫—Å—Ç—É
            try:
                reason_select.select_by_visible_text(reason_value)
            except:
                # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é
                options = reason_select.options
                for option in options:
                    if "–Ω–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å" in option.text.lower() or "3g" in option.text.lower() or "4g" in option.text.lower():
                        reason_select.select_by_visible_text(option.text)
                        self.logger.info(f"‚úÖ –ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {option.text}")
                        return True

                # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –æ–ø—Ü–∏—é
                reason_select.select_by_index(0)
                self.logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ, –≤—ã–±—Ä–∞–Ω–∞ –ø–µ—Ä–≤–∞—è –æ–ø—Ü–∏—è: {reason_select.first_selected_option.text}")

            self.logger.info(f"‚úÖ –ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {reason_value}")
            return True

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è: {e}")
            return False

    def _find_element_by_text(self, text, tag_name=None):
        """
        –ò—â–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ —Ç–µ–∫—Å—Ç—É.

        Args:
            text: –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞
            tag_name: –¢–∏–ø —Ç–µ–≥–∞ (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω)

        Returns:
            WebElement: –ù–∞–π–¥–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–ª–∏ None
        """
        try:
            if tag_name:
                xpath = f"//{tag_name}[contains(text(), '{text}') or contains(@placeholder, '{text}') or contains(@title, '{text}')]"
            else:
                xpath = f"//*[contains(text(), '{text}') or contains(@placeholder, '{text}') or contains(@title, '{text}')]"

            elements = self.driver.find_elements(By.XPATH, xpath)

            if elements:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
                return elements[0]

            return None

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ —Ç–µ–∫—Å—Ç—É: {e}")
            return None

    def _find_element_by_multiple_criteria(self, field_name, field_type="input"):
        """
        –ò—â–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.

        Args:
            field_name: –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞
            field_type: –¢–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞ (input, select, button)

        Returns:
            WebElement: –ù–∞–π–¥–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–ª–∏ None
        """
        try:
            # –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—è
            field_variants = {
                'period': ['–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞', '–ü–µ—Ä–∏–æ–¥', '–¢–∏–ø –ø–µ—Ä–∏–æ–¥–∞', 'Period'],
                'start_date': ['–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞', '–ù–∞—á–∞–ª–æ', '–°', 'Start Date', 'From'],
                'end_date': ['–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è', '–û–∫–æ–Ω—á–∞–Ω–∏–µ', '–ü–æ', 'End Date', 'To'],
                'reason': ['–ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è', '–ü—Ä–∏—á–∏–Ω–∞', '–û–±—Ä–∞—â–µ–Ω–∏–µ', 'Reason', 'Issue Type']
            }

            # –ü–æ–ª—É—á–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–∑–≤–∞–Ω–∏–π –¥–ª—è –ø–æ–ª—è
            variants = field_variants.get(field_name, [field_name])

            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ –∫–∞–∂–¥–æ–º—É –≤–∞—Ä–∏–∞–Ω—Ç—É
            for variant in variants:
                element = self._find_element_by_text(variant, field_type)
                if element:
                    self.logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ '{field_name}' –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç—É '{variant}'")
                    return element

            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ —Ç–µ–∫—Å—Ç—É, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ –∞—Ç—Ä–∏–±—É—Ç–∞–º
            if field_type == "input":
                # –ò—â–µ–º –ø–æ name –∞—Ç—Ä–∏–±—É—Ç—É
                elements = self.driver.find_elements(By.XPATH, f"//input[contains(@name, '{field_name}') or contains(@id, '{field_name}')]")
                if elements:
                    self.logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ '{field_name}' –ø–æ –∞—Ç—Ä–∏–±—É—Ç–∞–º")
                    return elements[0]

            elif field_type == "select":
                # –ò—â–µ–º –ø–æ name –∞—Ç—Ä–∏–±—É—Ç—É
                elements = self.driver.find_elements(By.XPATH, f"//select[contains(@name, '{field_name}') or contains(@id, '{field_name}')]")
                if elements:
                    self.logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ '{field_name}' –ø–æ –∞—Ç—Ä–∏–±—É—Ç–∞–º")
                    return elements[0]

            self.logger.warning(f"‚ö†Ô∏è –ü–æ–ª–µ '{field_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –ø–æ –æ–¥–Ω–æ–º—É –∫—Ä–∏—Ç–µ—Ä–∏—é")
            return None

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —ç–ª–µ–º–µ–Ω—Ç–∞ '{field_name}' –ø–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º: {e}")
            return None

    def _wait_for_element_ready(self, element, timeout=5):
        """
        –ñ–¥–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é.

        Args:
            element: WebElement –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            timeout: –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

        Returns:
            bool: True –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≥–æ—Ç–æ–≤, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
        """
        try:
            start_time = time.time()
            while time.time() - start_time < timeout:
                try:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç –≤–∏–¥–∏–º –∏ –∫–ª–∏–∫–∞–±–µ–ª–µ–Ω
                    if element.is_displayed() and element.is_enabled():
                        return True
                    time.sleep(0.5)
                except:
                    time.sleep(0.5)

            return False
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞: {e}")
            return False

    def submit_report_request(self, wait_time=10):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞.

        Args:
            wait_time: –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

        Returns:
            bool: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            self.logger.info("üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞...")

            # –†–∞–±–æ—Ç–∞–µ–º —Å iframe –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º
            if self.iframe_mode:
                return self._submit_report_request_in_iframe(wait_time)
            else:
                return self._submit_report_request_in_main_document(wait_time)

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            return False

    def _submit_report_request_in_iframe(self, wait_time):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –≤ iframe'–µ."""
        try:
            # –ò—â–µ–º iframe
            iframe = self.driver.find_element(By.TAG_NAME, "iframe")
            if not iframe:
                self.logger.error("‚ùå Iframe –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ iframe
            self.driver.switch_to.frame(iframe)
            self.logger.info("‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ iframe –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞")

            try:
                # –ò—â–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
                submit_button = WebDriverWait(self.driver, 10).until(
                    EC.element_to_be_clickable((By.ID, self.ELEMENT_IDS['submit_button']))
                )

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≥–æ—Ç–æ–≤–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞
                if not self._wait_for_element_ready(submit_button):
                    self.logger.error("‚ùå –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é")
                    return False

                # –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ
                submit_button.click()
                self.logger.info("‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")

                # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞ —Å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
                self.logger.info("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞...")
                if not self._wait_for_report_loaded(wait_time):
                    self.logger.error("‚ùå –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞")
                    return False

                return True

            finally:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
                self.driver.switch_to.default_content()
                self.logger.info("‚úÖ –í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç")

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –≤ iframe: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            try:
                self.driver.switch_to.default_content()
            except:
                pass
            return False

    def _submit_report_request_in_main_document(self, wait_time):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ (—Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥)."""
        try:
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –ø–æ ID
            try:
                submit_button = WebDriverWait(self.driver, 10).until(
                    EC.element_to_be_clickable((By.ID, self.ELEMENT_IDS['submit_button']))
                )
            except TimeoutException:
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ ID, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —Ç–µ–∫—Å—Ç—É
                self.logger.info("üîç –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ ID, –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É...")

                # –ò—â–µ–º –∫–Ω–æ–ø–∫—É –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–∞–º —Ç–µ–∫—Å—Ç–∞
                button_texts = ['–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–∞', '–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å', '–û—Ç–ø—Ä–∞–≤–∏—Ç—å', '–ü—Ä–æ—Å–º–æ—Ç—Ä', 'Submit', 'Generate']
                submit_button = None

                for text in button_texts:
                    submit_button = self._find_element_by_text(text, "input")
                    if not submit_button:
                        submit_button = self._find_element_by_text(text, "button")
                    if submit_button:
                        self.logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ —Ç–µ–∫—Å—Ç—É: {text}")
                        break

                if not submit_button:
                    self.logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞")
                    return False

            # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–Ω–æ–ø–∫–∏
            if not self._wait_for_element_ready(submit_button):
                self.logger.error("‚ùå –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é")
                return False

            submit_button.click()

            self.logger.info("‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")

            # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞
            self.logger.info(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞ ({wait_time} —Å–µ–∫)...")
            time.sleep(wait_time)

            return True

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            return False

    def export_to_excel(self):
        """
        –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç –≤ Excel.

        Returns:
            bool: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            self.logger.info("üîÑ –ù–∞—á–∏–Ω–∞–µ–º —ç–∫—Å–ø–æ—Ä—Ç –≤ Excel...")

            # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–Ω–µ iframe'–∞, –∏—â–µ–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ
            self.logger.info("üîç –ò—â–µ–º –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ...")

            # –ò—â–µ–º –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è/—ç–∫—Å–ø–æ—Ä—Ç–∞
            save_button_selectors = [
                "//*[contains(text(), '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å')]",
                "//*[contains(text(), 'Save')]",
                "//*[contains(text(), '–≠–∫—Å–ø–æ—Ä—Ç')]",
                "//*[contains(text(), 'Export')]",
                "//*[contains(text(), 'Excel')]",
                "//button[contains(text(), '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å')]",
                "//button[contains(text(), 'Save')]",
                "//a[contains(text(), '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å')]",
                "//a[contains(text(), 'Save')]",
                "//input[contains(@value, '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å')]",
                "//input[contains(@value, 'Save')]"
            ]

            save_button = None
            for selector in save_button_selectors:
                try:
                    elements = self.driver.find_elements(By.XPATH, selector)
                    if elements:
                        save_button = elements[0]
                        self.logger.info(f"‚úÖ –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É: {selector}")
                        break
                except:
                    continue

            if not save_button:
                self.logger.error("‚ùå –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return False

            # –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            self.logger.info("üñ±Ô∏è –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è...")
            save_button.click()

            # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
            self.logger.info("‚è≥ –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞...")
            time.sleep(2)

            # –ò—â–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Å –æ–ø—Ü–∏—è–º–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            dropdown_selectors = [
                "//select[contains(@id, 'format') or contains(@id, 'Format')]",
                "//select[contains(@name, 'format') or contains(@name, 'Format')]",
                "//select[contains(@class, 'format') or contains(@class, 'Format')]",
                "//div[contains(@class, 'dropdown')]//select",
                "//div[contains(@class, 'menu')]//select",
                "//ul[contains(@class, 'dropdown')]//select",
                "//ul[contains(@class, 'menu')]//select"
            ]

            format_dropdown = None
            for selector in dropdown_selectors:
                try:
                    elements = self.driver.find_elements(By.XPATH, selector)
                    if elements:
                        format_dropdown = elements[0]
                        self.logger.info(f"‚úÖ –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ä–º–∞—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É: {selector}")
                        break
                except:
                    continue

            if format_dropdown:
                # –í—ã–±–∏—Ä–∞–µ–º Excel –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
                try:
                    format_select = Select(format_dropdown)

                    # –ò—â–µ–º –æ–ø—Ü–∏—é Excel
                    excel_options = []
                    for option in format_select.options:
                        if 'excel' in option.text.lower() or 'xlsx' in option.text.lower() or 'xls' in option.text.lower():
                            excel_options.append(option)

                    if excel_options:
                        # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –æ–ø—Ü–∏—é Excel
                        format_select.select_by_visible_text(excel_options[0].text)
                        self.logger.info(f"‚úÖ –í—ã–±—Ä–∞–Ω —Ñ–æ—Ä–º–∞—Ç: {excel_options[0].text}")
                    else:
                        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ Excel, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –æ–ø—Ü–∏—é
                        format_select.select_by_index(0)
                        self.logger.warning(f"‚ö†Ô∏è Excel –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã–±—Ä–∞–Ω–∞ –ø–µ—Ä–≤–∞—è –æ–ø—Ü–∏—è: {format_select.first_selected_option.text}")

                except Exception as e:
                    self.logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞: {e}")

            # –ò—â–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            confirm_selectors = [
                "//*[contains(text(), '–û–ö')]",
                "//*[contains(text(), 'OK')]",
                "//*[contains(text(), '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')]",
                "//*[contains(text(), 'Confirm')]",
                "//*[contains(text(), '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å')]",
                "//*[contains(text(), 'Save')]",
                "//button[contains(text(), '–û–ö')]",
                "//button[contains(text(), 'OK')]",
                "//input[contains(@value, '–û–ö')]",
                "//input[contains(@value, 'OK')]"
            ]

            confirm_button = None
            for selector in confirm_selectors:
                try:
                    elements = self.driver.find_elements(By.XPATH, selector)
                    if elements:
                        confirm_button = elements[0]
                        self.logger.info(f"‚úÖ –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É: {selector}")
                        break
                except:
                    continue

            if confirm_button:
                # –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                self.logger.info("üñ±Ô∏è –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...")
                confirm_button.click()
                self.logger.info("‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω")
            else:
                self.logger.info("‚ÑπÔ∏è –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤–æ–∑–º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")

            # –ñ–¥–µ–º –Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∫–∏
            time.sleep(3)
            return True

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –≤ Excel: {e}")
            return False

    def wait_for_download(self, download_dir, timeout=60):
        """
        –û–∂–∏–¥–∞–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞.

        Args:
            download_dir: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
            timeout: –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

        Returns:
            str: –ü—É—Ç—å –∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            self.logger.info(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –≤ {download_dir}...")

            start_time = time.time()
            while time.time() - start_time < timeout:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
                import os
                files = [f for f in os.listdir(download_dir)
                        if f.endswith('.xlsx') or f.endswith('.xls')]

                if files:
                    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
                    files.sort(key=lambda x: os.path.getmtime(
                        os.path.join(download_dir, x)), reverse=True)
                    latest_file = files[0]
                    file_path = os.path.join(download_dir, latest_file)

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (–∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞)
                    try:
                        with open(file_path, 'rb') as f:
                            pass
                        self.logger.info(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: {latest_file}")
                        return file_path
                    except PermissionError:
                        # –§–∞–π–ª –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
                        pass

                time.sleep(2)

            self.logger.error("‚ùå –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞")
            return None

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
            return None

    def process_report(self, start_date, end_date, download_dir, period='–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π', reason='–Ω–∏–∑–∫–∞—è_—Å–∫–æ—Ä–æ—Å—Ç—å_3g_4g'):
        """
        –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—á–µ—Ç–∞.

        Args:
            start_date: –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –æ—Ç—á–µ—Ç–∞
            end_date: –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞
            download_dir: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
            period: –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞
            reason: –ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è

        Returns:
            str: –ü—É—Ç—å –∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            self.logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Ç—á–µ—Ç–∞ —Å –Ω–æ–≤–æ–≥–æ —Å–∞–π—Ç–∞")

            # 1. –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç—á–µ—Ç–∞
            if not self.fill_report_parameters(start_date, end_date, period, reason):
                return None

            # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
            if not self.submit_report_request():
                return None

            # 3. –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ Excel
            if not self.export_to_excel():
                return None

            # 4. –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
            downloaded_file = self.wait_for_download(download_dir)
            if not downloaded_file:
                return None

            self.logger.info(f"üéâ –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω: {downloaded_file}")
            return downloaded_file

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç—á–µ—Ç–∞: {e}")
            return None
