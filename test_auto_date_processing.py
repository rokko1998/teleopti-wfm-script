#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ –¥–∞—Ç–µ.
"""

import pandas as pd
from pathlib import Path
from modules.excel_manager import get_date_from_first_row, filter_problems_by_date, calculate_time_window_for_date

def test_date_extraction():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞—Ç—ã –∏–∑ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞—Ç—ã –∏–∑ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö...")

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        '–î–∞—Ç–∞–ë–µ–∑–í—Ä–µ–º–µ–Ω–∏': ['01.08.2025', '01.08.2025', '02.08.2025'],
        '–ù–æ–º–µ—Ä –º–∞—Å—Å–æ–≤–æ–π': ['113156', '113157', '113158'],
        '–ó–∞–º–µ—Ç–∫–∏': [7, 8, 9],
        '–ù–∞–∑–≤–∞–Ω–∏–µ': ['–ü—Ä–æ–±–ª–µ–º–∞ 1', '–ü—Ä–æ–±–ª–µ–º–∞ 2', '–ü—Ä–æ–±–ª–µ–º–∞ 3'],
        '–†–µ–≥–∏–æ–Ω': ['–°–∞—Ö–∞–ª–∏–Ω', '–°–∞—Ö–∞–ª–∏–Ω', '–ú–æ—Å–∫–≤–∞'],
        '–°—Ç–∞—Ä—Ç': ['16.07.2025 9:21', '16.07.2025 10:30', '17.07.2025 8:15'],
        '–û–∫–æ–Ω—á–∞–Ω–∏–µ': ['00.01.1900 0:00', '00.01.1900 0:00', '00.01.1900 0:00'],
        '–ú–∞–∫—Ä–æ—Ä–µ–≥–∏–æ–Ω': ['–ë–∏–î–í', '–ë–∏–î–í', '–¶–§–û'],
        '–ú–µ—Å—è—Ü': [8, 8, 8],
        '–ù–µ–¥–µ–ª—è (–≤—Å)': [31, 31, 32],
        '–ù–µ–¥–µ–ª—è (ISO)': [31, 31, 32]
    }

    df = pd.DataFrame(test_data)

    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞—Ç—ã
        target_date = get_date_from_first_row(df)
        print(f"‚úÖ –î–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω–∞: {target_date.strftime('%d.%m.%Y')}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ –¥–∞—Ç–µ
        filtered_df = filter_problems_by_date(df, target_date)
        print(f"‚úÖ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –ø—Ä–æ–±–ª–µ–º –¥–ª—è –¥–∞—Ç—ã {target_date.strftime('%d.%m.%Y')}: {len(filtered_df)}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
        if len(filtered_df) > 0:
            first_row = filtered_df.iloc[0]
            win_start, win_end = calculate_time_window_for_date(first_row, target_date)
            print(f"‚úÖ –í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏:")
            print(f"   –ù–∞—á–∞–ª–æ: {win_start}")
            print(f"   –û–∫–æ–Ω—á–∞–Ω–∏–µ: {win_end}")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

def test_with_real_file(file_path: str):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º —Ñ–∞–π–ª–æ–º."""
    print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–µ–∞–ª—å–Ω—ã–º —Ñ–∞–π–ª–æ–º: {file_path}")

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        df = pd.read_excel(file_path, sheet_name="–û—Ç—á–µ—Ç")
        print(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω, —Å—Ç—Ä–æ–∫: {len(df)}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞—Ç—ã
        target_date = get_date_from_first_row(df)
        print(f"‚úÖ –î–∞—Ç–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∞: {target_date.strftime('%d.%m.%Y')}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
        filtered_df = filter_problems_by_date(df, target_date)
        print(f"‚úÖ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –ø—Ä–æ–±–ª–µ–º: {len(filtered_df)}")

        if len(filtered_df) > 0:
            print("üìã –ü–µ—Ä–≤—ã–µ 3 –ø—Ä–æ–±–ª–µ–º—ã:")
            for idx, row in filtered_df.head(3).iterrows():
                print(f"   {row['–ù–æ–º–µ—Ä –º–∞—Å—Å–æ–≤–æ–π']} - {row['–†–µ–≥–∏–æ–Ω']} - {row['–î–∞—Ç–∞–ë–µ–∑–í—Ä–µ–º–µ–Ω–∏']}")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ñ–∞–π–ª–æ–º: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...")

    # –¢–µ—Å—Ç —Å —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    success1 = test_date_extraction()

    # –¢–µ—Å—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º —Ñ–∞–π–ª–æ–º (–µ—Å–ª–∏ –µ—Å—Ç—å)
    success2 = True
    test_file = "test.xlsx"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    if Path(test_file).exists():
        success2 = test_with_real_file(test_file)
    else:
        print(f"‚ö†Ô∏è –§–∞–π–ª {test_file} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")

    if success1 and success2:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")